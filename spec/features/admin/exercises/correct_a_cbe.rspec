# frozen_string_literal: true

require 'rails_helper'

RSpec.describe 'Correct a CBE exercise', type: :feature do
  describe 'Admin can see and correct a CBE exercise' do
    let(:user)            { build(:user) }

    let(:course)          { create(:active_course) }
    let(:cbe)             { create(:cbe, course: course) }
    let(:exercise)        { create(:exercise) }
    let!(:user_log)       { create(:cbe_user_log, cbe: cbe, exercise: exercise, user: user) }
    let(:cbe_section)     { create(:cbe_section, cbe: cbe) }
    let(:question)        { create(:cbe_question, kind: :open, section: cbe_section) }
    let!(:user_question)  { create(:cbe_user_question, cbe_question: question, user_log: user_log) }

    before do
      allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(user)
      allow_any_instance_of(ApplicationController).to receive(:logged_in_required).and_return(true)
      allow_any_instance_of(ApplicationController).to receive(:ensure_user_has_access_rights).and_return(true)
      allow_any_instance_of(Cbe).to receive(:total_score).and_return(10.0)
      allow_any_instance_of(Exercise).to receive(:return).and_return(true)

      visit correct_cbe_admin_exercise_path(id: exercise.id)
    end

    describe 'Correct CBE form', js: true do
      it 'correct a CBE' do
        # Open answer feedback
        fill_in 'score', with: 10.00
        fill_in 'score', with: 10.00
        click_button "update_question_score_btn_#{user_question.id}"
        sleep(3)
        expect(page).to have_content('Score: 10.0')

        # Overall feedback
        within('div.cbe_user_log_comment') do
          find('div[contenteditable]').set('This is an awesome answer.')
          click_button 'overall_score_btn'
        end
        sleep(3)
        expect(page).to have_content('Current Overall Score: 10.0/10.0 - 100.0%')


        accept_confirm do
          click_link 'Return Correction'
        end
        expect(page).to have_content(I18n.t('controllers.exercises.update.flash.success'))
      end
    end
  end
end
