version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
          NODE_ENV: test
          CC_TEST_REPORTER_ID: 1802bdcb3406ff0d9ecbaaefb286213d6fbe92da0673d35ad3c972a3750e3cea
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: db/learnsignal_v3_test
          POSTGRES_PASSWORD: ""
      - image: redis
    steps:
      - checkout

      - run:
          name: Which bundler?
          command: bundle -v

      - restore_cache:
          keys:
            - learnsignal-bundle-v2-{{ checksum "Gemfile.lock" }}
            - learnsignal-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          key: learnsignal-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Update Browsers List
          command: npx browserslist@latest --update-db

      - run:
          name: Webpacker compile
          command: bundle exec rake webpacker:compile
          no_output_timeout: 30m

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # download test reporter as a static binary
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl  -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out ./test_results/rspec/rspec.xml \
                              --format progress \
                              --color \
                              --exclude-pattern "**/features/users/onboarding_spec.rb, **/features/admin/practice_question_spec.rb, **/features/admin/subscription_cancellation_spec.rb" \

      # upload test coverage reporter
      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"

      # collect reports
      - store_test_results:
          path: ./test-results/rspec/
      - store_artifacts:
          path: ./tmp/capybara/
          destination: screenshots
      - deploy:
          command: |
            ./cc-test-reporter sum-coverage --output - --parts $CIRCLE_NODE_TOTAL coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input - -r 1802bdcb3406ff0d9ecbaaefb286213d6fbe92da0673d35ad3c972a3750e3cea
