-if current_user
  / intercom
  =intercom_script_tag({app_id: (ENV['intercom_app_id'] || 'yqda78s4'),
    user_id: current_user.id,
    email: current_user.email,
    name: current_user.full_name,
    created_at: current_user.created_at,
    custom_data: {user_country: current_user.country.try(:name),
    guid: current_user.guid,
    user_group: current_user.user_group.try(:name),
    environment: Rails.env.to_s,
    stripe_customer_id: current_user.stripe_customer_id,
    subscription_cancelled_at: (current_user.subscriptions.last.try(:current_status).to_s.include?('cancel') ? current_user.subscriptions.last.updated_at : nil),
    trial_expires_at: (current_user.subscriptions.last.try(:current_status).to_s.include?('trialing') ? current_user.subscriptions.last.try(:next_renewal_date) : nil),
    subscription_status: current_user.subscriptions.try(:last).try(:current_status),
    individual_videos_watched: current_user.course_module_element_user_logs.latest_only.videos.count,
    total_video_plays: current_user.course_module_element_user_logs.videos.count,
    individual_quizzes_taken: current_user.course_module_element_user_logs.latest_only.quizzes.count,
    total_quiz_attempts: current_user.course_module_element_user_logs.quizzes.count,
    total_quiz_questions_answered: current_user.quiz_attempts.count,
    total_quiz_questions_answered_correctly: current_user.quiz_attempts.all_correct.count,
    next_course_module_element_url: course_special_link(current_user.course_module_element_user_logs.last.try(:course_module_element).try(:next_element)).to_s,
    most_recent_video_url: course_special_link(current_user.course_module_element_user_logs.videos.last.try(:course_module_element)).to_s,
    most_recent_quiz_url: course_special_link(current_user.course_module_element_user_logs.quizzes.last.try(:course_module_element)).to_s,
    most_recent_quiz_score: current_user.course_module_element_user_logs.quizzes.last.try(:quiz_score_actual),
    most_recent_quiz_wrong_answers: current_user.course_module_element_user_logs.latest_only.quizzes.last.try(:quiz_attempts).try(:all_incorrect).try(:map, &:quiz_question_id).to_a.join(', '),
    total_course_modules_completed: current_user.student_exam_tracks.all_complete.count,
    most_recent_course_module_completed_url: course_special_link(current_user.student_exam_tracks.last.try(:course_module)).to_s,
    most_recent_course_module_completed_at: current_user.student_exam_tracks.last.try(:updated_at) } })
