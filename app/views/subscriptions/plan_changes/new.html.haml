%main
  %article.bg-gray5
    .container-bg
      .container#plans
        %header.hero-section
          %h1.h2-hero.mb-2
            Change Plan
          %p.p-hero.px-lg-6
            Select your preferred payment plan
        %section.pb-md-6.pb-5
          -if flash[:success] || flash[:error] || flash[:warning]
            =render partial: 'layouts/flash_messages'
          =form_for(@subscription, url: subscription_plan_changes_path(@subscription), method: :post, html: {class: 'form-horizontal', role: 'form', id: 'upgrade-subscription-form'}) do |f|
            =f.hidden_field :subscription_plan_id
            =f.hidden_field :use_paypal, value: @subscription.paypal?
            .row
              .col-12.col-lg-8
                .row.row-md.justify-content-center
                  -@subscription.upgrade_options.each do |plan|
                    .col
                      %article.card.card-primary.card-primary-alt{id: "sub-#{plan.currency.iso_code}-#{plan.payment_frequency_in_months}", data: {plan_id: plan.id, :price => plan.price, :currency => plan.currency.iso_code, :name => plan.name, :body => plan.exam_body.name}}
                        -if plan.most_popular
                          .card-banner.bg-mint
                            %large.text-white
                              Most popular payment plan
                        .card-body.text-center.py-4.py-sm-5
                          %h2.card-title
                            =t("views.general.payment_frequency_in_months.a#{plan.payment_frequency_in_months}")

                          %ul.list-centered
                            -if plan.bullet_points_list && !plan.bullet_points_list.empty?
                              - plan.bullet_points_list.split(/, ?/).each do |bullet|
                                %li=bullet
                            -else
                              %li="Access all #{plan.exam_body.group.name} courses"
                              %li="Topic-by-topic lectures"
                              %li="24/7 tutor support"

                            -unless plan.exam_body.name == "CPD"
                              %li{style: 'font-style: italic;'}
                                Cancel anytime

                          %p.h2.mb-0
                            =plan.currency.format_number(plan.price)

                          -if plan.monthly_percentage_off
                            %p.h5.text-gray2{style: 'margin-bottom: 0;'}
                              Save over
                              =plan.monthly_percentage_off
                              ='%'

                          .pt-4.pt-md-5
                            %fieldset
                              %legend.sr-only Select this plan
                              .custom-control.custom-radio.plan-option
                                %input{id: 'chk-plan-' + plan.id.to_s, type: 'radio', class: 'custom-control-input style-radio option'}
                                %label{class: "custom-control-label ", for: 'chk-plan-' + plan.id.to_s}
                                  %span.custom-label-info
                                    %span Select this plan
                                  %span.custom-check



              .col-12.col-lg-4
                %section#simply
                  .container.pt-lg-6
                    .row
                      - if @subscription.stripe? && !@card
                        .col-sm-10.offset-1
                          %h5.text-alert
                            ='You must have a default payment method in order to change plans. Please visit the card details section in your account.'
                      - else
                        .col-sm-10.offset-1
                          %h5.pt-4
                            ='This action will result in an immediate charge and start a new billing period from this date.'

                          - if @subscription.stripe? && @card
                            .invoice-payment-details-wrap
                              %span.payment-content
                                =image_tag('ico-card.svg', alt: 'Credit Card Icon', class: 'logo-icon mr-2 mr-sm-3')
                                =@card.brand
                                &#8226;
                                &#8226;
                                &#8226;
                                =@card.last_4

                          %p.py-4
                            ='Any remaining time on your current billing period will be credited to your account, and used for this and any future payments until all credit is used.'
                          %div.invalid-details

                        .col-sm-10.offset-1.text-center
                          =f.submit 'Change Plan Now', class: 'btn btn-primary full-width', id: 'changePlan'
                          .sk-circle
                            .sk-circle1.sk-child
                            .sk-circle2.sk-child
                            .sk-circle3.sk-child
                            .sk-circle4.sk-child
                            .sk-circle5.sk-child
                            .sk-circle6.sk-child
                            .sk-circle7.sk-child
                            .sk-circle8.sk-child
                            .sk-circle9.sk-child
                            .sk-circle10.sk-child
                            .sk-circle11.sk-child
                            .sk-circle12.sk-child


=render partial: 'update_card_modal'



:javascript

  function addToCart(theThing) {
    let parentThing = $(theThing).parent().parent().parent().parent();
    dataLayer.push({
      'event': 'addToCart',
      'ecommerce': {
        'currencyCode': parentThing.attr('data-currency'),
        'add': {
          'products': [{
            'name': parentThing.attr('data-name'),
            'id': parentThing.attr('data-plan-id'),
            'price': parentThing.attr('data-price'),
            'brand': parentThing.attr('data-body'),
            'category': 'Change Subscription',
            'quantity': 1
            }]
        }
      }
    });
  }

  // UnChecks radio buttons except the one that was clicked.
  // Finds the id value of the sub plan that the radio button belongs to.
  // Sets the hidden field subscription_plan_id to that id.
  function choosePlan(theThing) {
    $('.option[type="radio"]:checked').prop('checked', false);
    $(theThing).find('.option[type="radio"]').prop('checked', true);
    $('#subscription_subscription_plan_id').val($(theThing).parent().parent().parent().parent().attr('data-plan-id'));
    addToCart(theThing);
  }

  var style = {
    base: {
      color: '#32325d',
      lineHeight: '18px',
      fontFamily: '"OakesGrotesk", "Helvetica Neue", Helvetica, sans-serif',
      fontSmoothing: 'antialiased',
      fontSize: '16px',
      '::placeholder': {
        color: '#aab7c4'
      }
    },
    invalid: {
      color: '#fa755a',
      iconColor: '#fa755a'
    }
  };

  $(document).on('ready', function() {
    var displayError = $('.invalid-details');
    var displayCardError = $('#card-errors');
    let clientSecret, subscriptionId;
    let statusArray = ['active', 'succeeded'];
    displayError.text('');
    displayCardError.text('');
    var stripe = Stripe('#{ENV['LEARNSIGNAL_V3_STRIPE_PUBLIC_KEY']}');
    var elements = stripe.elements();
    var cardId = "#{@card&.id}"

    var cardElement = elements.create('card', {hidePostalCode: true, style: style});
    cardElement.mount('#card-element');

    $(".sk-circle").hide();
    choosePlan($('.plan-option')[0]);
    $('.option').bind('click', function(event) {
      event.stopPropagation();
      choosePlan(this.parentElement);
    });

    $(".plan-option").bind('click', function(event) {
      event.preventDefault();
      choosePlan(this);
    });

    $("#upgrade-subscription-form").submit(function(ev) {
      ev.preventDefault();
      $(".sk-circle").show();
      displayError.text('');
      $("#changePlan").hide();

      if ($('#subscription_use_paypal').val() === 'true') {
        this.submit();
      } else {
        if (cardId && cardId.length > 0) {
          upgradeStripeSubscription();
        }
      }
    });

    function upgradeStripeSubscription(){
      var form = $('#upgrade-subscription-form');

      $.ajax({
        type: $(form).attr('method'),
        url: $(form).attr('action'),
        data: $(form).serialize(),
        dataType: 'json',
        success: function(data, status, xhr){
          if (['incomplete', 'past_due'].includes(data.status)) {
            handleStripeAction(data.client_secret, data.subscription_id)
          } else if(data.status == 'active') {
            window.location.replace("#{personal_upgrade_complete_url(@subscription.completion_guid)}");
          }
        },
        error: function(request, status, error){
          if (request.status === 500 || request.responseJSON === undefined) {
            resetForm('Something went wrong. Please try again.');
          } else {
            resetForm(request.responseJSON.error);
          }
        }
      });
    }

    function handleStripeAction(client_secret, subscription_id){
      let intentStatus = '';
      stripe.handleCardPayment(client_secret).then(function(result) {
        if (result.error) {
          resetForm(result.error.message);
          intentStatus = 'pending';
          let failureStatusArray = ['requires_payment_method', 'requires_source']
          if ($.inArray(result.error.payment_intent.status, failureStatusArray) !== -1) {
            launchPaymentMethodForm(client_secret, subscription_id);
          }
        } else {
          intentStatus = result['paymentIntent']['status'];
          $.ajax({
            type: 'post',
            url: "/subscriptions/" + subscription_id + "plan_changes/status_from_stripe",
            data: { status: intentStatus, id: subscription_id },
            dataType: 'json',
            success: function(data,status,xhr){
              if ($.inArray(intentStatus, statusArray) !== -1){
                window.location.replace("#{personal_upgrade_complete_url(@subscription.completion_guid)}");
              }
            },
            error: function(xhr,status,error){
              resetForm(error);
            }
          });
        }
      });
    }

    function launchPaymentMethodForm(client_secret, subscription_id) {
      $('#update-card-modal').modal('show');
      clientSecret = client_secret;
      subscriptionId = subscription_id;
    }

    cardElement.addEventListener('change', function(event) {
      if (event.error) {
        resetCardForm(event.error.message);
      } else {
        displayCardError.text('');
      }
    });

    var cardButton = document.getElementById('card_submit');

    cardButton.addEventListener('click', function(ev) {
      ev.preventDefault();
      $('#card_submit').hide();
      $(".sk-circle").show();

      stripe.handleCardPayment(clientSecret, cardElement).then(function(result) {
        if (result.error) {
          resetCardForm(result.error.message);
          intentStatus = 'pending';
        } else {
          intentStatus = result['paymentIntent']['status'];
          $.ajax({
            type: 'post',
            url: "/subscriptions/" + subscriptionId + "plan_changes/status_from_stripe",
            data: { status: intentStatus },
            dataType: 'json',
            success: function(data,status,xhr){
              if( $.inArray(intentStatus, statusArray) !== -1){
                window.location.replace("#{personal_upgrade_complete_url(@subscription.completion_guid)}");
              }
            },
            error: function(xhr,status,error){
              resetCardForm(error);
            }
          });
        }
      })
    });

    function resetForm(error){
      $(".sk-circle").hide();
      $("#changePlan").show();
      displayError.text(error);
      $("#changePlan").attr("disabled", false);
    }

    function resetCardForm(error){
      $(".sk-circle").hide();
      $("#card_submit").show();
      displayCardError.text(error);
      $("#card_submit").attr("disabled", false);
    }
  });

