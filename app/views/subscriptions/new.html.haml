%main
  %article.bg-gray5
    .container
      %header.hero-section
        -if @plans && @plans.first
          %h1.h2-hero.mb-3
            = "#{@plans.first.exam_body.name} Tuition Payment"
          %p.p-hero.px-lg-6
            =@plans.first.checkout_sub_heading
        -else
          %h1.h1-hero.mb-2
            = "Exam Tuition Payment"
          %p.p-hero.px-lg-6
            ='Achieve your learning goals with a learnsignal subscription plan and enjoy professional courses delivered online so that you can study on a schedule that suits you.'

      %section.pb-md-6.pb-5#wrapper
        #upgrade-subscription
          =form_for @subscription, url: create_subscription_url(@subscription.user_id), html: { id: 'upgrade-form', role: 'form'} do |f|
            =render partial: 'layouts/error_messages', locals: {thing: @subscription, message: t('views.users.upgrade_subscription.error_panel_caption')}
            =f.hidden_field :user_id, value: current_user.id
            =f.hidden_field :subscription_plan_id, value: @subscription.subscription_plan_id
            =f.hidden_field :stripe_token
            =f.hidden_field :use_paypal, value: false

            .bg-gray5
              .container
                -if flash[:success] || flash[:error] || flash[:warning]
                  .row.subscription-flash
                    .col-xs-12
                      =render partial: 'layouts/flash_messages'


              .container.payment
                .row
                  .col-lg-6.mb-5.mb-xl-0
                    %fieldset
                      %legend.sr-only Select a Plan
                      - if params[:prioritise_plan_frequency].present? || params[:plan_guid].present?
                        =render partial: 'single_plan_checkout', locals: {subscription: @subscription, plans: @plans}
                      - else
                        =render partial: 'multi_plans', locals: {subscription: @subscription, plans: @plans}

                  .col-lg-6
                    %fieldset.card.card-payments
                      %p.h2.mb-1 Choose a way to pay
                      %p.mb-4 Select your preferred method of payment
                      .form-group.form-group-expandable
                        .custom-control.custom-radio
                          %input#pay-with-card.custom-control-input.style-radio{:name => "payment-options", :type => "radio", :value => 'stripe'}
                          %label.custom-control-label{:for => "pay-with-card"}
                            %span.custom-label-info
                              %span.h3.m-0
                                =image_tag('ico-card.svg', :alt => "Credit Card Icon", :class => 'logo-icon.mr-2.mr-sm-3')
                                %span Credit / Debit Card
                            %span.custom-check
                              / custom checkbox
                        =render partial: 'subscription_payment_cards/form', locals: {f: f}
                      .form-group.form-group-expandable
                        .custom-control.custom-radio
                          %input#pay-with-paypal.custom-control-input.style-radio{:name => "payment-options", :type => "radio", :value => 'paypal'}
                          %label.custom-control-label{:for => "pay-with-paypal"}
                            %span.custom-label-info
                              %span.h3.m-0
                                =image_tag('ico-paypal.svg', :alt => "PayPal Logo", :class => 'logo-icon.mr-2.mr-sm-3')
                                %span PayPal
                            %span.custom-check
                              / custom checkbox
                        =render partial: 'subscription_payment_cards/paypal_form', locals: {f: f}






    .container-bg.bg-white
      .container
        %article.text-center.py-6.py-sm-7
          %header.pb-3
            %h1.px-5.px-sm-6 Discover the smarter way to study
            %p.p-hero Learnsignal uses a unique method of learning to provide an easier, more enjoyable and more effective way to learn.
          .px-4.px-lg-8
            .row.row-lg
              .col-md-3
                .pb-4.d-flex.flex-md-column.align-items-center
                  .mr-4.mb-md-4.mx-md-0
                    %i.budicon-desktop-smartphone{"aria-hidden" => "true"}
                  %p.m-0.text-left.text-md-center Access anytime, anywhere
              .col-md-3
                .pb-4.d-flex.flex-md-column.align-items-center
                  .mr-4.mb-md-4.mx-md-0
                    %i.budicon-card-slides{"aria-hidden" => "true"}
                  %p.m-0.text-left.text-md-center Topic-by-topic online lectures
              .col-md-3
                .pb-4.d-flex.flex-md-column.align-items-center
                  .mr-4.mb-md-4.mx-md-0
                    %i.budicon-doc-marker{"aria-hidden" => "true"}
                  %p.m-0.text-left.text-md-center Expert notes and corrected questions
              .col-md-3
                .pb-4.d-flex.flex-md-column.align-items-center
                  .mr-4.mb-md-4.mx-md-0
                    %i.budicon-happy-chat{"aria-hidden" => "true"}
                  %p.m-0.text-left.text-md-center Tutor support 24 hours a day, 7 days a week



:javascript

  var plan_id = '1';
  dataLayer = [];

  function addToCart() {
    var selectedPlan = $("input[name='plans']:checked");
    dataLayer.push({
      'event': 'addToCart',
      'ecommerce': {
        'currencyCode': selectedPlan.attr('data-currency'),
        'add': {
          'products': [{
            'name': selectedPlan.attr('data-name'),
            'id': selectedPlan.attr('value'),
            'price': selectedPlan.attr('data-price'),
            'brand': selectedPlan.attr('data-body'),
            'category': 'Subscription',
            'quantity': 1
            }]
        }
      }
    });
  }

  function selectPayment(type) {
    var selectedPlan = $("input[name='plans']:checked");
    dataLayer.push({ 'event': 'checkout',
      'ecommerce': {
        'checkout': {
          'actionField': {'step': 1, 'option':type},
          'products': [{
            'name': selectedPlan.attr('data-name'),
            'id': selectedPlan.attr('value'),
            'price': selectedPlan.attr('data-price'),
            'brand': selectedPlan.attr('data-body'),
            'category': 'Subscription',
            'quantity': 1
          }]
        }
      }
    });
  }

  function intervalSummary(frequency) {
    switch (frequency) {
      case '1':
        return 'Billed every month';
      case '3':
        return 'Billed every 3 months';
      case '12':
        return 'Billed every 12 months';
      default:
        return 'Billed every month';
    }
  }

  function choosePlan(selectedPlan) {
    $('#subscription_subscription_plan_id').val(selectedPlan);
    updateCheckoutTotal();
    addToCart();
  }



  function updateCheckoutTotal() {
    var selectedPlan = $("input[name='plans']:checked");

    $('.payment-details span.value').text($(selectedPlan).attr('data-price'));
    $('.payment-details p.billing-summary').text(intervalSummary($(selectedPlan).attr('data-frequency')));
  }

  function initializePlan() {
    var selectedPlan = $("input[name='plans']:checked").val();
    choosePlan(selectedPlan);
  }

  $(document).on('ready', function() {
    initializePlan();
    $('input[type=radio][name=plans]').bind('change', function(event) {
      event.preventDefault();
      choosePlan($(this).val());
    });
    $(".sk-circle").hide();
    $('.invalid-code').hide();
    $('.discounted-price').hide();

    // Bojan Stuff
    $('.form-group-expandable').on('change', '.custom-control-input[type="radio"][name="payment-options"]', function() {
      $(this).closest('.card').find('.custom-control-input[type="radio"]').closest('.custom-control').siblings('.payment-details').slideUp();
      if ($(this).is(':checked')) {
        $(this).closest('.custom-control').siblings('.payment-details').slideDown();
        selectPaymentMethod($(this).val())
      }
    });
    //$('.form-group-expandable .custom-control-input[type="radio"]:checked').closest('.custom-control').siblings('.payment-details').show();


    $('#all-plans').collapse({
      toggle: false
    });

    $('#all-plans').on('show.bs.collapse', function() {
      $('.js-show-more-plans').addClass('disabled');
    });
    $('#all-plans').on('shown.bs.collapse', function() {
      $('.js-show-more-plans').on('click', function() {
        return false;
      });
    });

    function selectPaymentMethod(paymentType) {
      selectPayment(paymentType);
      switch(paymentType) {
        case 'paypal':
          $('#subscription_use_paypal').val(true);
          break;
        case 'stripe':
          $('#subscription_use_paypal').val(false);
          break;
        default:
          $('#subscription_use_paypal').val(false);
      }
    }

    // Custom styling can be passed to options when creating an Element.
    var style = {
      base: {
        color: '#32325d',
        lineHeight: '18px',
        fontFamily: '"OakesGrotesk", "Helvetica Neue", Helvetica, sans-serif',
        fontSmoothing: 'antialiased',
        fontSize: '16px',
        '::placeholder': {
          color: '#aab7c4'
        }
      },
      invalid: {
        color: '#fa755a',
        iconColor: '#fa755a'
      }
    };

    var stripe = Stripe('#{ENV['LEARNSIGNAL_V3_STRIPE_PUBLIC_KEY']}');
    var elements = stripe.elements();

    var card = elements.create('card', {hidePostalCode: true, style: style});
    card.mount('#card-element');

    // Create a token when the form is submitted.
    var form = document.getElementById('upgrade-form');
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      //Replace submit button with spinning JS
      $('#card_submit').prop('disabled',true);
      $('#card_submit').hide();
      $('#paypal_submit').prop('disabled',true);
      $('#paypal_submit').hide();
      $(".sk-circle").show();
      if ($('#subscription_use_paypal').val() === 'true') {
        document.getElementById('upgrade-form').submit();
      } else {
        createToken();
      }
    });

    card.addEventListener('change', function(event) {
      var displayError = document.getElementById('card-errors');
      if (event.error) {
        $('#card_submit').show();
        $('#card_submit').prop('disabled',false);
        $('#paypal_submit').show();
        $('#paypal_submit').prop('disabled',false);
        displayError.textContent = event.error.message;
      } else {
        displayError.textContent = '';
      }
    });

    function stripeTokenHandler(token) {
      // Insert the token ID into the form so it gets submitted to the server
      var form = document.getElementById('upgrade-form');
      $('#subscription_stripe_token').val(token.id);

      // Submit the form
      form.submit();
    }

    function createToken() {
      stripe.createToken(card).then(function(result) {
        if (result.error) {
          // Inform the user if there was an error
          var errorElement = document.getElementById('card-errors');
          errorElement.textContent = result.error.message;
          //Replace spinning JS with Submit button
          $('#card_submit').prop('disabled',false);
          $('#card_submit').show();
          $(".sk-circle").hide();

        } else {
          // Send the token to your server
          stripeTokenHandler(result.token);
        }
      });
    };
  })



