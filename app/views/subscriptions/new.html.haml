.upgrade
  #wrapper
    #upgrade-subscription
      =form_for @subscription, url: create_subscription_url(@subscription.user_id), html: { id: 'upgrade-form', role: 'form'} do |f|
        =render partial: 'layouts/error_messages', locals: {thing: @subscription, message: t('views.users.upgrade_subscription.error_panel_caption')}
        =f.hidden_field :user_id, value: current_user.id
        =f.hidden_field :subscription_plan_id, value: @subscription.subscription_plan_id
        =f.hidden_field :stripe_token
        =f.hidden_field :use_paypal, value: false
        -if params[:coupon]
          =hidden_field_tag :hidden_coupon_code

        %section#simply
          .container
            .row.subscription-flash
              .col-xs-12
                =render partial: 'layouts/flash_messages'
            .row
              .col-lg-6
                %h2.title1
                  %i.fa.fa-book
                  Pick a plan

                .row.plan-options
                  .col-sm-6
                    .plan-select
                      -@subscription_plans.each do |plan|
                        %div{ :class => "plan #{'chosen' if @subscription.subscription_plan_id == plan.id}", id: "sub-#{plan.currency.iso_code}-#{plan.payment_frequency_in_months}", data: {plan_id: plan.id, price: plan.currency.format_number(plan.price), interval: plan.payment_frequency_in_months, plan_name: plan.interval_name} }
                          %span.plan-title
                            =plan.interval_name
                          %span.price
                            =plan.currency.format_number(plan.price)

                  .col-sm-6
                    .plan-summary
                      .summary-container
                        %span.plan-title
                        %span.price
                        %p.summary

              .col-lg-6
                %h2.title1
                  Choose a way to pay

                .payment-options
                  %div{ :class => "option", :id => "stripe_option" }
                    %i.fa.fa-credit-card
                    Credit / Debit Card
                    .pretty-radio.choose-payment-option
                      %input{ :type => "radio", :name => "payment_radio", :id => "select_card", :value => "stripe" }
                      %label{ :for => "select_card" }
                  %div{ :id => 'card_inputs', :class => 'checkout-form' }
                    =render partial: 'subscription_payment_cards/form', locals: {f: f}
                  %div{ :class => "option", :id => "paypal_option" }
                    =image_tag('https://www.paypalobjects.com/webstatic/en_US/i/buttons/PP_logo_h_200x51.png', height: 30)
                    .pretty-radio.choose-payment-option
                      %input{ :type => "radio", :name => "payment_radio", :id => "select_paypal", :value => "paypal" }
                      %label{ :for => "select_paypal" }
                  %div{ :id => 'paypal_inputs', :class => 'checkout-form' }
                    =render partial: 'subscription_payment_cards/paypal_form', locals: {f: f}


:javascript


  var couponCode = $('#coupon_code');
  var plan_id = '1';

  function intervalSummary(frequency) {
    switch (frequency) {
      case '1':
        return 'Billed every month';
      case '3':
        return 'Billed every 3 months';
      case '12':
        return 'Billed every 12 months';
      default:
        return 'Billed every month';
    }
  }

  function updatePlanSummary(selectedPlan) {
    $('.summary-container > span.plan-title').text($(selectedPlan).attr('data-plan-name'));
    $('.summary-container > span.price').text($(selectedPlan).attr('data-price'));
    $('.summary-container > p.summary').text(intervalSummary($(selectedPlan).attr('data-interval')));
  }

  function choosePlan(selectedPlan) {
    var preChosen = $('.plan-select').find('div.chosen');
    if (preChosen) {
      preChosen.removeClass('chosen');
      $(selectedPlan).addClass('chosen');
    }
    $('#subscription_subscription_plan_id').val($(selectedPlan).attr('data-plan-id'));

    updateCheckoutTotal();
    updatePlanSummary(selectedPlan);

    // plan_id = $('#subscription_subscription_plan_id').val();

    // Need to trigger Ajax call here if the coupon field already has a value
    if ($('#coupon_code').val()) {
      validateCoupon();
    }
  }


  // Trigger Ajax call on every input into the coupon field.
  // Ajax call params are the coupon field value and selected_plan_id
  // If response contains 'valid:true' add green border to field input
  // If response contains 'valid:false' add red border to field and show error text
  //
  //
  function validateCoupon() {

      if(!couponCode.value){
        $.ajax({
          url: '#{coupon_validation_path}',

          dataType: 'json',
          data: JSON.stringify({'coupon_code': couponCode.val(), 'plan_id': plan_id }),
          method: 'POST',
          contentType: "application/json; charset=utf-8",

          success: function(data,status,xhr){
            var validCoupon = data.valid;
            var discountedPrice = data.discounted_price;

            if(validCoupon === false){
              $('#coupon_code').removeClass("coupon-success");
              $('#coupon_code').addClass("coupon-error");
              $('.invalid-code').show();
              $('.discounted-price').hide();
              $('#total-value').removeClass('strike');

            } else if(validCoupon === true){
              $('#coupon_code').removeClass("coupon-error");
              $('#coupon_code').addClass("coupon-success");
              $('.invalid-code').hide();

              $('.discounted-price').show();
              $('#total-value').addClass('strike');
              $('#discounted-value').text(discountedPrice);

            } else {
              $('#coupon_code').removeClass("coupon-error");
              $('#coupon_code').removeClass("coupon-success");
              $('.invalid-code').hide();
            }



          },
          error: function(xhr,status,error){
            console.log(xhr);
            alert(error);
          }

        });

    } else  {
      couponCode.removeClass("coupon-error");
      couponCode.removeClass("coupon-success");
      couponCode.hide();
    }

  }

  $('#coupon_code').on('input',function(e) {
    validateCoupon();
  });

  // Hide green/red border and coupon error text if input has no value
  $('#coupon_code').blur(function() {
    if ($('#coupon_code').val() === '') {
      $('#coupon_code').removeClass("coupon-error");
      $('#coupon_code').removeClass("coupon-success");
      $('.invalid-code').hide();
    }
  });

  function updateCheckoutTotal() {
    var selectedPlan = $(".plan-select > .plan.chosen");

    $('.tot-get > .price > span.value').text($(selectedPlan).attr('data-price'));
    $('.tot-get > .price > p').text(intervalSummary($(selectedPlan).attr('data-interval')));
  }

  function selectSripe() {
    $('#card_inputs').slideDown();
    $('#paypal_inputs').slideUp();
    $('#subscription_use_paypal').val(false);
    $('#select_card').prop("checked", true);

    updateCheckoutTotal();
  }

  function selectPaypal() {
    $('#card_inputs').slideUp();
    $('#paypal_inputs').slideDown();
    $('#subscription_use_paypal').val(true);
    $('#select_paypal').prop("checked", true);

    updateCheckoutTotal();
  }

  function initializePlan() {
    var selectedPlan = $('.plan-select').find('div.chosen');
    choosePlan(selectedPlan);
  }

  $(document).on('ready', function() {
    initializePlan();
    $(".plan-select > .plan").bind('click', function(event) {
      event.preventDefault();
      choosePlan(this);
    });
    $(".sk-circle").hide();
    $('.invalid-code').hide();
    $('.discounted-price').hide();

    $('input[type=radio][name=payment_radio]').change(function() {
      if (this.value == 'stripe') {
        selectSripe();
      } else if (this.value == 'paypal') {
        selectPaypal();
      }
    });

    $('#stripe_option').on('click', function() {
      selectSripe();
    })

    $('#paypal_option').on('click', function() {
      selectPaypal();
    })
  })

  // Custom styling can be passed to options when creating an Element.
  var style = {
    base: {
      fontWeight: 300,
      fontFamily: 'Rubik',
      fontSize: '20px',
      lineHeight: '24px'
    }
  };

  var stripe = Stripe('#{ENV['LEARNSIGNAL_V3_STRIPE_PUBLIC_KEY']}');
  var elements = stripe.elements();

  var card = elements.create('card', {hidePostalCode: true, style: style});
  card.mount('#card-element');


  function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('upgrade-form');
    $('#subscription_stripe_token').val(token.id);
    $('#hidden_coupon_code').val($('#coupon_code').val());

    // Submit the form
    form.submit();
  }

  function createToken() {
    stripe.createToken(card).then(function(result) {
      if (result.error) {
        // Inform the user if there was an error
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
        //Replace spinning JS with Submit button
        $('#card_submit').prop('disabled',false);
        $('#card_submit').show();
        $(".sk-circle").hide();

      } else {
        // Send the token to your server
        stripeTokenHandler(result.token);
      }
    });
  };

  // Create a token when the form is submitted.
  var form = document.getElementById('upgrade-form');
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    //Replace submit button with spinning JS
    $('#card_submit').prop('disabled',true);
    $('#card_submit').hide();
    $('#paypal_submit').prop('disabled',true);
    $(".sk-circle").show();
    if ($('#subscription_use_paypal').val() === 'true') {
      document.getElementById('upgrade-form').submit();
    } else {
      createToken();
    }
  });

  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });


