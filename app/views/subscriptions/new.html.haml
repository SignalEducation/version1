.upgrade
  #wrapper
    #upgrade-subscription
      =form_for @subscription, url: create_subscription_url(@subscription.user_id), html: { id: 'upgrade-form', role: 'form'} do |f|
        =render partial: 'layouts/error_messages', locals: {thing: @subscription, message: t('views.users.upgrade_subscription.error_panel_caption')}
        =f.hidden_field :user_id, value: current_user.id
        =f.hidden_field :subscription_plan_id, value: @subscription.subscription_plan_id
        =f.hidden_field :stripe_token
        =f.hidden_field :use_paypal, value: false
        -if params[:coupon]
          =hidden_field_tag :hidden_coupon_code

        .bg-asphalt
          .container
            -if flash[:success] || flash[:error] || flash[:warning]
              .row.subscription-flash
                .col-xs-12
                  =render partial: 'layouts/flash_messages'
            .hero
              %h5.text-red Upgrade your account
              %h1.h1-mega
                = "Get your #{@plans.first.exam_body} tuition sorted for 2019"
              %p.text-lg.mb-0
                ='Make the most of 2019 by passing your ACCA. LearnSignalâ€™s Gold Approved tuition is the smartest way to study. The LearnSignal yearly plan is now better value than ever,'
                %span{style: 'font-weight: bold;'}
                  ="with 3 months free on our annual subscription."


          .container.payment
            .row
              .col-lg-6.mb-5.mb-xl-0.mt-2
                %fieldset
                  %legend.sr-only Select a Plan
                  - if @subscription.subscription_plan.payment_frequency_in_months == 12
                    =render partial: 'single_plan_checkout', locals: {subscription: @subscription, plans: @plans}
                  - else
                    =render partial: 'multi_plans', locals: {subscription: @subscription, plans: @plans}

              .col-lg-6
                %fieldset.card
                  %p.h2.mb-1 Choose a way to pay
                  %p.mb-4 Choose your preferred method of payment
                  .form-group.form-group-expandable
                    .custom-control.custom-radio
                      %input#pay-with-card.custom-control-input.style-radio{:name => "payment-options", :type => "radio", :value => 'stripe'}
                      %label.custom-control-label{:for => "pay-with-card"}
                        %span.custom-label-info
                          %span.h3.m-0
                            =image_tag('ico-card.svg', :alt => "Credit Card Icon", :class => 'logo-icon.mr-2.mr-sm-3')
                            %span Credit / Debit Card
                        %span.custom-check
                          / custom checkbox
                    =render partial: 'subscription_payment_cards/form', locals: {f: f}
                  .form-group.form-group-expandable
                    .custom-control.custom-radio
                      %input#pay-with-paypal.custom-control-input.style-radio{:name => "payment-options", :type => "radio", :value => 'paypal'}
                      %label.custom-control-label{:for => "pay-with-paypal"}
                        %span.custom-label-info
                          %span.h3.m-0
                            =image_tag('ico-paypal.svg', :alt => "PayPal Logo", :class => 'logo-icon.mr-2.mr-sm-3')
                            %span PayPal
                        %span.custom-check
                          / custom checkbox
                    =render partial: 'subscription_payment_cards/paypal_form', locals: {f: f}

        .bg-white
          .container
            .py-6
              %h2.mb-5 Included in Your LearnSignal Membership
              .row
                .col-md-5
                  .with-icon-checked
                    %p Topic&ndash;by&ndash;topic, online 15&ndash;minute lectures
                  .with-icon-checked
                    %p Notes &amp; MCQs
                  .with-icon-checked
                    %p Practice CBE's
                .col-md-5
                  .with-icon-checked
                    %p 24&#47;7 hour Support
                  .with-icon-checked
                    %p Exam Bootcamp
                  .with-icon-checked
                    %p Webinar Week


:javascript

  var couponCode = $('#coupon_code');
  var plan_id = '1';

  function intervalSummary(frequency) {
    switch (frequency) {
      case '1':
        return 'Billed every month';
      case '3':
        return 'Billed every 3 months';
      case '12':
        return 'Billed every 12 months';
      default:
        return 'Billed every month';
    }
  }

  function choosePlan(selectedPlan) {
    $('#subscription_subscription_plan_id').val(selectedPlan);

    updateCheckoutTotal();
    if ($('#coupon_code').val()) {
      validateCoupon();
    }
  }


  // Trigger Ajax call on every input into the coupon field.
  // Ajax call params are the coupon field value and selected_plan_id
  // If response contains 'valid:true' add green border to field input
  // If response contains 'valid:false' add red border to field and show error text
  //
  //
  function validateCoupon() {

      if(!couponCode.value){
        $.ajax({
          url: '#{coupon_validation_path}',

          dataType: 'json',
          data: JSON.stringify({'coupon_code': couponCode.val(), 'plan_id': plan_id }),
          method: 'POST',
          contentType: "application/json; charset=utf-8",

          success: function(data,status,xhr){
            var validCoupon = data.valid;
            var discountedPrice = data.discounted_price;

            if(validCoupon === false){
              $('#coupon_code').removeClass("coupon-success");
              $('#coupon_code').addClass("coupon-error");
              $('.invalid-code').show();
              $('.discounted-price').hide();
              $('#total-value').removeClass('strike');

            } else if(validCoupon === true){
              $('#coupon_code').removeClass("coupon-error");
              $('#coupon_code').addClass("coupon-success");
              $('.invalid-code').hide();

              $('.discounted-price').show();
              $('#total-value').addClass('strike');
              $('#discounted-value').text(discountedPrice);

            } else {
              $('#coupon_code').removeClass("coupon-error");
              $('#coupon_code').removeClass("coupon-success");
              $('.invalid-code').hide();
            }



          },
          error: function(xhr,status,error){
            console.log(xhr);
            alert(error);
          }

        });

    } else  {
      couponCode.removeClass("coupon-error");
      couponCode.removeClass("coupon-success");
      couponCode.hide();
    }

  }

  $('#coupon_code').on('input',function(e) {
    validateCoupon();
  });

  // Hide green/red border and coupon error text if input has no value
  $('#coupon_code').blur(function() {
    if ($('#coupon_code').val() === '') {
      $('#coupon_code').removeClass("coupon-error");
      $('#coupon_code').removeClass("coupon-success");
      $('.invalid-code').hide();
    }
  });

  function updateCheckoutTotal() {
    var selectedPlan = $("input[name='plans']:checked");

    $('.payment-details span.value').text($(selectedPlan).attr('data-price'));
    $('.payment-details p.billing-summary').text(intervalSummary($(selectedPlan).attr('data-frequency')));
  }

  function initializePlan() {
    var selectedPlan = $("input[name='plans']:checked").val();
    choosePlan(selectedPlan);
  }

  $(document).on('ready', function() {
    initializePlan();
    $('input[type=radio][name=plans]').bind('change', function(event) {
      event.preventDefault();
      choosePlan($(this).val());
    });
    $(".sk-circle").hide();
    $('.invalid-code').hide();
    $('.discounted-price').hide();

    // Bojan Stuff
    $('.form-group-expandable').on('change', '.custom-control-input[type="radio"][name="payment-options"]', function() {
      $(this).closest('.card').find('.custom-control-input[type="radio"]').closest('.custom-control').siblings('.payment-details').slideUp();
      if ($(this).is(':checked')) {
        $(this).closest('.custom-control').siblings('.payment-details').slideDown();
        selectPaymentMethod($(this).val())
      }
    });
    $('.form-group-expandable .custom-control-input[type="radio"]:checked').closest('.custom-control').siblings('.payment-details').show();


    $('#all-plans').collapse({
      toggle: false
    });

    $('#all-plans').on('show.bs.collapse', function() {
      $('.js-show-more-plans').addClass('disabled');
    });
    $('#all-plans').on('shown.bs.collapse', function() {
      $('.js-show-more-plans').on('click', function() {
        return false;
      });
    });

    function selectPaymentMethod(paymentType) {
      switch(paymentType) {
        case 'paypal':
          $('#subscription_use_paypal').val(true);
          break;
        case 'stripe':
          $('#subscription_use_paypal').val(false);
          break;
        default:
          $('#subscription_use_paypal').val(false);
      }
    }

    // Custom styling can be passed to options when creating an Element.
    var style = {
      base: {
        color: '#32325d',
        lineHeight: '18px',
        fontFamily: '"Rubik", "Helvetica Neue", Helvetica, sans-serif',
        fontSmoothing: 'antialiased',
        fontSize: '16px',
        '::placeholder': {
          color: '#aab7c4'
        }
      },
      invalid: {
        color: '#fa755a',
        iconColor: '#fa755a'
      }
    };

    var stripe = Stripe('#{ENV['LEARNSIGNAL_V3_STRIPE_PUBLIC_KEY']}');
    var elements = stripe.elements();

    var card = elements.create('card', {hidePostalCode: true, style: style});
    card.mount('#card-element');

    // Create a token when the form is submitted.
    var form = document.getElementById('upgrade-form');
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      //Replace submit button with spinning JS
      $('#card_submit').prop('disabled',true);
      $('#card_submit').hide();
      $('#paypal_submit').prop('disabled',true);
      $('#paypal_submit').hide();
      $(".sk-circle").show();
      if ($('#subscription_use_paypal').val() === 'true') {
        document.getElementById('upgrade-form').submit();
      } else {
        createToken();
      }
    });

    card.addEventListener('change', function(event) {
      var displayError = document.getElementById('card-errors');
      if (event.error) {
        displayError.textContent = event.error.message;
      } else {
        displayError.textContent = '';
      }
    });

    function stripeTokenHandler(token) {
      // Insert the token ID into the form so it gets submitted to the server
      var form = document.getElementById('upgrade-form');
      $('#subscription_stripe_token').val(token.id);
      $('#hidden_coupon_code').val($('#coupon_code').val());

      // Submit the form
      form.submit();
    }

    function createToken() {
      stripe.createToken(card).then(function(result) {
        if (result.error) {
          // Inform the user if there was an error
          var errorElement = document.getElementById('card-errors');
          errorElement.textContent = result.error.message;
          //Replace spinning JS with Submit button
          $('#card_submit').prop('disabled',false);
          $('#card_submit').show();
          $(".sk-circle").hide();

        } else {
          // Send the token to your server
          stripeTokenHandler(result.token);
        }
      });
    };
  })


