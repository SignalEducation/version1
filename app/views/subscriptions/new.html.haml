=javascript_include_tag 'coupons'

%main
  %article.bg-gray5
    .container
      %header.hero-section
        -if @plans && @plans.first
          %h1.h2-hero.mb-3
            = "#{@plans.first.exam_body.name} Tuition Payment"
          %p.p-hero.px-lg-6
            =@plans.first.checkout_sub_heading
        -else
          %h1.h1-hero.mb-2
            = 'Exam Tuition Payment'
          %p.p-hero.px-lg-6
            ='Achieve your learning goals with a learnsignal subscription plan and enjoy professional courses delivered online so that you can study on a schedule that suits you.'

      %section.pb-md-6.pb-5#wrapper
        #upgrade-subscription
          =form_for @subscription, url: subscriptions_path, html: { id: 'upgrade-form', role: 'form' } do |f|
            =render partial: 'layouts/error_messages', locals: { thing: @subscription, message: t('views.users.upgrade_subscription.error_panel_caption') }
            =f.hidden_field :user_id, value: current_user.id
            =f.hidden_field :subscription_plan_id, value: @subscription.subscription_plan_id
            =f.hidden_field :completion_guid
            =f.hidden_field :stripe_token
            =f.hidden_field :use_paypal, value: false
            =f.hidden_field :kind, value: @kind
            =hidden_field_tag :hidden_coupon_code

            .bg-gray5
              .container
                -if flash[:success] || flash[:error] || flash[:warning]
                  .row.subscription-flash
                    .col-xs-12
                      =render partial: 'layouts/flash_messages'

              .container.payment
                .row
                  .col-lg-6.mb-5.mb-xl-0
                    %fieldset{id: 'plans-options' }
                      %legend.sr-only Select a Plan
                      -# subscriptions helper
                      =plans_partials(params, @subscription, @plans)
                  .col-lg-6
                    %fieldset.card.card-payments
                      %p.h2.mb-1 Choose a way to pay
                      %p.mb-4 Select your preferred method of payment
                      .form-group.form-group-expandable
                        .custom-control.custom-radio
                          %input#pay-with-card.custom-control-input.style-radio{ name: 'payment-options', type: 'radio', value: 'stripe' }
                          %label.custom-control-label{ for: 'pay-with-card' }
                            %span.custom-label-info
                              %span.h3.m-0
                                =image_tag('ico-card.svg', alt: 'Credit Card Icon', class: 'logo-icon.mr-2.mr-sm-3')
                                %span Credit / Debit Card
                            %span.custom-check
                              / custom checkbox
                        =render partial: 'subscription_payment_cards/form', locals: {f: f}
                      .form-group.form-group-expandable
                        .custom-control.custom-radio
                          %input#pay-with-paypal.custom-control-input.style-radio{name: 'payment-options', type: 'radio', value: 'paypal'}
                          %label.custom-control-label{for: 'pay-with-paypal'}
                            %span.custom-label-info
                              %span.h3.m-0
                                =image_tag('ico-paypal.svg', alt: 'PayPal Logo', class: 'logo-icon.mr-2.mr-sm-3')
                                %span PayPal
                            %span.custom-check
                              / custom checkbox
                        =render partial: 'subscription_payment_cards/paypal_form', locals: {f: f}

    .container-bg.bg-white
      .container
        %article.text-center.py-6.py-sm-7
          %header.pb-3
            %h1.px-5.px-sm-6 Discover the smarter way to study
            %p.p-hero Learnsignal uses a unique method of learning to provide an easier, more enjoyable and more effective way to learn.
          .px-4.px-lg-8
            .row.row-lg
              .col-md-3
                .pb-4.d-flex.flex-md-column.align-items-center
                  .mr-4.mb-md-4.mx-md-0
                    %i.budicon-desktop-smartphone{'ariahidden': 'true'}
                  %p.m-0.text-left.text-md-center Access anytime, anywhere
              .col-md-3
                .pb-4.d-flex.flex-md-column.align-items-center
                  .mr-4.mb-md-4.mx-md-0
                    %i.budicon-card-slides{'ariahidden': 'true'}
                  %p.m-0.text-left.text-md-center Topic-by-topic online lectures
              .col-md-3
                .pb-4.d-flex.flex-md-column.align-items-center
                  .mr-4.mb-md-4.mx-md-0
                    %i.budicon-doc-marker{'ariahidden': 'true'}
                  %p.m-0.text-left.text-md-center Expert notes and corrected questions
              .col-md-3
                .pb-4.d-flex.flex-md-column.align-items-center
                  .mr-4.mb-md-4.mx-md-0
                    %i.budicon-happy-chat{'ariahidden': 'true'}
                  %p.m-0.text-left.text-md-center Tutor support 24 hours a day, 7 days a week

:javascript
  let plan_id = '1';
  let searchParams = new URLSearchParams(window.location.search);

  function addToCart() {
    let selectedPlan = $("input[name='plans']:checked");
    let planData = {name: selectedPlan.attr('data-name'), id: selectedPlan.attr('value'), body: selectedPlan.attr('data-body'), frequency: selectedPlan.attr('data-frequency')};
    planOptionSelect(planData);

    fbq('track', 'AddToCart', {
      value: selectedPlan.attr('data-price'),
      currency: "#{@subscription&.subscription_plan&.currency&.iso_code}",
      name: "#{@subscription&.subscription_plan&.name}",
      brand:  "#{@subscription&.subscription_plan&.exam_body&.name}",
      subscription_interval: "#{@subscription&.subscription_plan&.interval_name}",
      content_category: 'Subscription'
    });

    window.uetq = window.uetq || [];
    window.uetq.push('event', 'AddToCart', {
      'event_category': 'Subscription',
      'event_label': '#{@subscription&.subscription_plan&.exam_body&.name}',
      'event_value': selectedPlan.attr('data-price')
    });
  }

  function checkout1() {
    var selectedPlan = $("input[name='plans']:checked");
    // dataLayer.push({ 'event': 'checkout',
    //   'ecommerce': {
    //     'checkout': {
    //       'actionField': {'step': 1, 'option': 'Logged In'},
    //       'products': [{
    //         'name': selectedPlan.attr('data-name'),
    //         'id': selectedPlan.attr('value'),
    //         'price': selectedPlan.attr('data-price'),
    //         'brand': selectedPlan.attr('data-body'),
    //         'category': 'Subscription',
    //         'quantity': 1
    //       }]
    //     }
    //   }
    // });
  }

  function checkout2(type) {
    var selectedPlan = $("input[name='plans']:checked");
    var convertType = (type === "stripe") ? "Credit Card" : "PayPal";
    providerOptionSelect(convertType);
  }

  function intervalSummary(frequency) {
    switch (frequency) {
      case '1':
        return 'Billed every month';
      case '3':
        return 'Billed every 3 months';
      case '12':
        return 'Billed every 12 months';
      default:
        return 'Billed every month';
    }
  }

  function choosePlan(selectedPlan) {
    $('#subscription_subscription_plan_id').val(selectedPlan);
    updateCheckoutTotal();
    plan_id = selectedPlan;
    if (searchParams.has('plan_guid') === false) {
      addToCart();
    }
  }

  function updateCheckoutTotal() {
    var selectedPlan = $("input[name='plans']:checked");

    $('.payment-details span.value').text($(selectedPlan).attr('data-price'));
    $('.payment-details p.billing-summary').text(intervalSummary($(selectedPlan).attr('data-frequency')));
  }

  function initializePlan() {
    var selectedPlan = $("input[name='plans']:checked").val();
    choosePlan(selectedPlan);
  }

  $(document).on('ready', function() {
    initializePlan();

    $('input[type=radio][name=plans]').bind('change', function(event) {
      event.preventDefault();
      choosePlan($(this).val());
      validateCoupon();
    });
    $(".spinning-loading").hide();
    $('.invalid-code').hide();
    $('.discounted-price').hide();
    if (searchParams.has('login') === true) {
      checkoutOption('Log In');
    } else if (searchParams.has('registered') === true) {
      checkoutOption('Registration');
    } else {
      checkout1();
    }

    $('.form-group-expandable').on('change', '.custom-control-input[type="radio"][name="payment-options"]', function() {
      $(this).closest('.card').find('.custom-control-input[type="radio"]').closest('.custom-control').siblings('.payment-details').slideUp();
      if ($(this).is(':checked')) {
        $(this).closest('.custom-control').siblings('.payment-details').slideDown();
        selectPaymentMethod($(this).val())
      }
    });

    $('#pay-with-card').click(); // To open the stripe card section on page load

    $('#all-plans').collapse({
      toggle: false
    });

    $('#all-plans').on('show.bs.collapse', function() {
      $('.js-show-more-plans').addClass('disabled');
    });
    $('#all-plans').on('shown.bs.collapse', function() {
      $('.js-show-more-plans').on('click', function() {
        return false;
      });
    });

    function selectPaymentMethod(paymentType) {
      checkout2(paymentType);
      switch(paymentType) {
        case 'paypal':
          $('#subscription_use_paypal').val(true);
          break;
        case 'stripe':
          $('#subscription_use_paypal').val(false);
          break;
        default:
          $('#subscription_use_paypal').val(false);
      }
    }

    // Custom styling can be passed to options when creating an Element.
    var style = {
      base: {
        color: '#32325d',
        lineHeight: '18px',
        fontFamily: '"OakesGrotesk", "Helvetica Neue", Helvetica, sans-serif',
        fontSmoothing: 'antialiased',
        fontSize: '16px',
        '::placeholder': {
          color: '#aab7c4'
        }
      },
      invalid: {
        color: '#fd5c63',
        iconColor: '#fd5c63'
      }
    };

    var stripe       = Stripe('#{ENV['LEARNSIGNAL_V3_STRIPE_PUBLIC_KEY']}');
    var elements     = stripe.elements();
    var displayError = document.getElementById('card-errors');
    var cardElement  = elements.create('card', { hidePostalCode: true, style: style });

    cardElement.mount('#card-element');

    cardElement.addEventListener('change', function(event) {
      if (event.error) {
        resetForm(event.error.message);
      } else {
        displayError.textContent = '';
      }
    });

    var paypalButton = document.getElementById('paypal_submit');

    paypalButton.addEventListener('click', function(ev) {
      $('#plans-options').prop('disabled', true);
      $('#card_submit').prop('disabled', true);
      $('#paypal_submit').prop('disabled', true);
      $('#card_submit').hide();
      $('#paypal_submit').hide();
      $(".spinning-loading").show();
      $('#hidden_coupon_code').val();
      document.getElementById('upgrade-form').submit();
    });

    var cardButton = document.getElementById('card_submit');

    cardButton.addEventListener('click', function(ev) {
      event.preventDefault();

      //Replace submit button with spinning JS
      $('#plans-options').prop('disabled', true);
      $('#card_submit').prop('disabled', true);
      $('#paypal_submit').prop('disabled', true);
      $('#card_submit').hide();
      $('#paypal_submit').hide();
      $(".spinner-message").html("Please wait...");
      $(".spinning-loading").show();
      $('#hidden_coupon_code').val($('#coupon_code').val());

      if ($('#subscription_use_paypal').val() === 'true') {
        document.getElementById('upgrade-form').submit();
      } else {
        stripe.createToken(cardElement).then(function(result) {
          if (result.error) {
            resetForm(result.error.message);
          } else {
            createSubscription(result.token);
          }
        });
      }
    });

    function createSubscription(token){
      $('#subscription_stripe_token').val(token.id);
      var form = $('#upgrade-form');

      $.ajax({
        type: $(form).attr('method'),
        url: $(form).attr('action'),
        data: $(form).serialize(),
        dataType: 'json',
        success: function(data, status, xhr){
          if(data.status == 'incomplete'){
            handlePayment(data.client_secret, data.subscription_id)
          } else if(data.status == 'active'){
            window.location.replace("#{personal_upgrade_complete_url(@subscription.completion_guid)}");
            subscriptionCreation(data);
          }
        },
        error: function(request, status, error){
          if (request.status === 500) {
            resetForm('Something went wrong. Please try again.');
          } else {
            resetForm(request.responseJSON.error);
          }
        }
      });
    }

    function handlePayment(client_secret, subscription_id){
      let statusArray = ['active', 'succeeded'];
      let intentStatus = '';

      $(".spinner-message").html("Still processing...");

      stripe.handleCardPayment(client_secret, cardElement).then(function(result) {
        if (result.error) {
          resetForm(result.error.message);
          intentStatus = 'pending';
          $.ajax({
            type: 'post',
            url: "/subscriptions/" + subscription_id + "/expire_incomplete",
            data: { },
            dataType: 'json'
          });
        } else {
          intentStatus = result['paymentIntent']['status'];
          $.ajax({
            type: 'post',
            url: "/subscriptions/" + subscription_id + "/status_from_stripe",
            data: { status: intentStatus },
            dataType: 'json',
            success: function(data,status,xhr){
              if( $.inArray(intentStatus, statusArray) !== -1){
                window.location.replace("#{personal_upgrade_complete_url(@subscription.completion_guid)}");
                subscriptionCreation(data);
              }
            },
            error: function(xhr,status,error){
              resetForm(error);
            }
          });
        }
      });
    }

    function resetForm(error){
      $('#card_submit').show();
      $('#plans-options').prop('disabled', false);
      $('#paypal_submit').show();
      $('.custom-check').prop('disabled', false);
      $('#card_submit').prop('disabled', false);
      $('#paypal_submit').prop('disabled', false);
      $(".spinning-loading").hide();

      displayError.textContent = error;
    }


    analytics.page('Payment', {
      exam_body_id: "#{@exam_body&.id}",
      exam_body_name: "#{@exam_body&.name}",
      onboarding: "#{current_user&.onboarding_process&.active&.to_s}",
      currency: "#{@currency&.iso_code}",
      subscription_plan_options: "#{@plans.map(&:id)}",
      sub_plan_guid: "#{params[:plan_guid]}"
    });

  })
