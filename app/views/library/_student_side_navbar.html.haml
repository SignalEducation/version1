#sidebar-wrapper-student.text-center
  #sidebar
    #menu
      =link_to navigation_special_link(@course_step), class: 'sidebar-back-btn', onclick: "sendClickEventToSegment('clicks_back_to_course', {userId: '#{@current_user&.id}',email: '#{@current_user&.email}',hasValidSubscription: '#{@current_user&.valid_subscription?}',isEmailVerified: '#{@current_user&.email_verified}',preferredExamBodyId: '#{@current_user&.preferred_exam_body_id}', isLoggedIn: '#{!@current_user&.nil?}', sessionId: '#{session&.id}', courseName: '#{@course.name}', programName: '#{@course.group.name}', moduleName: '#{@course_step.course_lesson.name}'})" do
        .i.material-icons{:style => "font-size:16px; margin-right:6px;"} arrow_back
        Back to Course
      .menu-title
        %div
          %div.sidebar-title-course
            = link_to @course.name, navigation_special_link(@course_step), title: @course.name
          %div.sidebar-title-lesson
            =@course_lesson.name
          
        %div.lesson-title
          Lessons (
          =@course_lesson.active_children.count
          )
        #step-block
          -@course_lesson.active_children.each_with_index  do |step, index|
            - permission = step.available_to_user(current_user, @valid_subscription, @course_log)
            - if step.course_lesson.free || permission[:view]
              =link_to course_special_link(step, @course_log), onclick: "sendClickEventToSegment('clicks_lesson_consume', {userId: '#{@current_user&.id}',email: '#{@current_user&.email}',hasValidSubscription: '#{@current_user&.valid_subscription?}',isEmailVerified: '#{@current_user&.email_verified}',preferredExamBodyId: '#{@current_user&.preferred_exam_body_id}', isLoggedIn: '#{!@current_user&.nil?}', sessionId: '#{session&.id}', courseName: '#{@course.name}', programName: '#{@course.group.name}', moduleName: '#{@course_step.course_lesson.name}', lessonName: '#{step.name}', lessonType: '#{step.type_name}'})" do
                .step{data: {course_step: step.id}, :class => sidepanel_border_radius(@course_step_index,index,@course_lesson.active_children.length.to_i) }
                  .step-part
                    %div{:style => "height:20px;"}
                      %i.material-icons.icon-bg-round.side-nav-material-icons
                        -if @course_log
                          -if @course_log.course_step_logs.all_completed.map(&:course_step_id).include?(step.id)
                            %span.green-check-iconWrapper
                              %i.material-icons.icon-bg-round.green-check{"aria-label" => "", :role => "img"}
                                check
                        
                        -if step.is_video?
                          smart_display
                        -elsif step.is_quiz?
                          quiz
                        -elsif step.is_note?
                          file_present
                        -elsif step.is_practice_question?
                          dynamic_form
                        -elsif step.is_constructed_response?
                          sticky_note_2
                        -else
                          file_present
                    %div.step-part-content
                      =step.name
                  .color-shade.step-part-font
                    -unless step.estimated_time_in_seconds.nil? || step.estimated_time_in_seconds == 0
                      =seconds_to_time(step.estimated_time_in_seconds) 
                      m

            - elsif !permission[:view] && permission[:reason] == 'invalid-subscription'
              =render partial: 'courses/navigation_restriction_link.html.haml', locals: {reason: permission[:reason], step: step, step_index: @course_step_index, index: index}

            - elsif !permission[:view] && permission[:reason] == 'related-lesson-restriction'
              =render partial: 'courses/navigation_restriction_link.html.haml', locals: {reason: permission[:reason], step: step, step_index: @course_step_index, index: index}
  #sidebar-bottom-menu
    .bottom-menu
      -if @course_lesson.next_module
        =link_to course_special_link(@course_lesson&.next_module&.first_active_cme), onclick: "sendClickEventToSegment('clicks_next_module', {userId: '#{@current_user&.id}',email: '#{@current_user&.email}',hasValidSubscription: '#{@current_user&.valid_subscription?}',isEmailVerified: '#{@current_user&.email_verified}',preferredExamBodyId: '#{@current_user&.preferred_exam_body_id}', isLoggedIn: '#{!@current_user&.nil?}', sessionId: '#{session&.id}', courseName: '#{@course.name}', programName: '#{@course.group.name}', moduleName: '#{@course_step.course_lesson.name}', lessonName: '#{@course_step.name}', nextModuleName: '#{@course_step.course_lesson.next_module ? @course_step.course_lesson.next_module.name : ''}'})", class: 'btn btn-primary btn-lg mb-3 mb-sm-0 w-100 font-weight-bold', data: {destination_url: course_special_link(@course_lesson&.next_module&.first_active_cme), type: 'Next Module'} do
          Next Module

#sidebar-wrapper-student-responsive.text-left
  .menu-overlay{onclick: "toggleLessonMenuMobile()"}
  #sidebar
    #menu
      .menu-title
        %div
          %div.sidebar-title-course
            = link_to @course.name, navigation_special_link(@course_step), title: @course.name
          %div.sidebar-title-lesson
            =@course_lesson.name
          
        %div.lesson-title
          Lessons (
          =@course_lesson.active_children.count
          )
        #step-block
          -@course_lesson.active_children.each_with_index  do |step, index|
            - permission = step.available_to_user(current_user, @valid_subscription, @course_log)
            - if step.course_lesson.free || permission[:view]
              =link_to course_special_link(step, @course_log) do
                .step{data: {course_step: step.name}, :class => sidepanel_border_radius(@course_step_index,index,@course_lesson.active_children.length.to_i) }
                  .step-part
                    %div{:style => "height:20px;"}
                      %i.material-icons.icon-bg-round.side-nav-material-icons
                        -if @course_log
                          -if @course_log.course_step_logs.all_completed.map(&:course_step_id).include?(step.id)
                            %span.green-check-iconWrapper
                              %i.material-icons.icon-bg-round.green-check{"aria-label" => "", :role => "img"}
                                check
                        
                        -if step.is_video?
                          smart_display
                        -elsif step.is_quiz?
                          quiz
                        -elsif step.is_note?
                          file_present
                        -elsif step.is_practice_question?
                          dynamic_form
                        -elsif step.is_constructed_response?
                          sticky_note_2
                        -else
                          file_present
                    %div.step-part-content
                      =step.name
                  .color-shade.step-part-font
                    -unless step.estimated_time_in_seconds.nil? || step.estimated_time_in_seconds == 0
                      =seconds_to_time(step.estimated_time_in_seconds)
                      m

            - elsif !permission[:view] && permission[:reason] == 'invalid-subscription'
              =render partial: 'courses/navigation_restriction_link.html.haml', locals: {reason: permission[:reason], step: step, step_index: @course_step_index, index: index}

            - elsif !permission[:view] && permission[:reason] == 'related-lesson-restriction'
              =render partial: 'courses/navigation_restriction_link.html.haml', locals: {reason: permission[:reason], step: step, step_index: @course_step_index, index: index}
    #sidebar-bottom-menu
      .bottom-menu.border-top
        .btn.lessonMenu-btn.js-lessonMenu-btn{onclick: "toggleLessonMenuMobile()"}
          %i.material-icons{"aria-hidden" => "true", style: "font-size: 16px;margin-right: 4px;"} close
          Close
        -if @course_lesson.next_module
          =link_to course_special_link(@course_lesson&.next_module&.first_active_cme), class: 'btn btn-primary btn-sm btn-sm-arrow-right', data: {destination_url: navigation_special_link(@course_step), type: 'Next Module'} do
            Next Module

:javascript
  $(document).ready(function(){

   setTimeout(function(){
     if (screen.width <= 768) {
      // var divA = document.getElementById('course-right-show-elem-notes').offsetHeight;
      // var divB = document.getElementById('sidebar-wrapper-student-responsive').offsetHeight;
      // document.getElementById('console-wrapper-sidebar').style.height = String(divA + divB) + 'px'
     }
    }, 100);
    function toggleLessonMenuMobile() {
      $("#sidebar-wrapper-student-responsive").toggleClass("active");
    }
    function toggleLessonMenuMobileOverlay() {
      $("#sidebar-wrapper-student-responsive").toggleClass("active");
    }
  });