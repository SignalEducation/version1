.modal.fade{id: 'enrollment-modal', tabindex: '-1', role: 'dialog', 'aria-labelledby': 'enrollmentModal', 'aria-hidden': 'true'}
  #enrollment_user_details_modal
    .modal-dialog.modal-lg{role: 'document'}
      .modal-content
        %button.btn.btn-icon.modal-close{'data-dismiss': 'modal'}
          %i.material-icons.ml-1{'aria-hidden': 'true'}
            close
        .modal-header
          %h3{id: 'enrollmentModalForm'}
            ="#{@course.try(:name)} Enrolment"


        .modal-body
          %fieldset.modal-forms
            .form-group.form-group-expandable
              .custom-control.custom-radio
                %input#enrollment-form.custom-control-input.style-radio{:name => "enrol-user-details-options", :type => "radio", :value => 'enroll', :checked => true}
                %label.custom-control-label{:for => "enrollment-form"}
                  %span.custom-label-info
                    %span.h5.m-0
                      %span Step 1 - Exam Sitting Details
                  %span.custom-check

              .form-details#enrollment_form
                =form_for(@new_enrollment, html: {class: 'form py-2 enrollment_modal_form', role: 'form', name: 'enrollment_modal_form'}, remote: true) do |f|
                  =f.hidden_field :course_id, value: @course.id
                  =f.hidden_field :exam_body_id, value: @course.exam_body_id
                  =f.hidden_field :notifications, value: false, id: 'hidden_notifications'
                  =f.hidden_field :course_log_id, value: @course_log.try(:id), id: 'scul_id'

                  .row
                    .col-sm-6
                      .form-group
                        -if @course.computer_based && @computer_exam_sitting

                          #custom_exam_date
                            =f.hidden_field :exam_sitting_id, value: @computer_exam_sitting.id
                            .form-group
                              =f.label :exam_date, t('views.enrollments.form.select_exam_date')
                              .form-row.align-items-center.justify-content-between
                                %span.custom-date-select.input-group.input-group-lg
                                  =f.date_select :exam_date, {order: [:day, :month, :year], prompt: { day: 'Day', month: 'Month', year: 'Year' },
                                   start_year: Date.today.year, end_year: Date.today.year + 2}, class: 'form-control custom-select'

                        -else
                          =f.label :exam_sitting_id, t('views.enrollments.form.exam_sitting_id')
                          .input-group.input-group-lg
                            =f.collection_select :exam_sitting_id, @exam_sittings, :id, :formatted_date, {include_blank: t('views.general.select')}, {class: 'form-control custom-select full-width', id: 'exam_sitting_select'}

                    .col-sm-6
                      -# TODO - Make this work with JS to set hidden field
                      %fieldset.pt-md-4
                        -#%legend.sr-only Notification Checkbox
                        -#.custom-control.custom-checkbox.mb-4.mt-2
                          %input{type: "checkbox", class: "custom-control-input", id: "notifications"}
                          %label{class: "custom-control-label", for: "notifications"}
                            ='Bootcamp Notifications'

                        -if @course_log
                          %legend.sr-only Reset Progress Checkbox
                          .custom-control.custom-checkbox.mb-4
                            %input{type: "checkbox", class: "custom-control-input", id: "use_new_scul"}
                            %label{class: "custom-control-label", for: "use_new_scul"}
                              ='Reset all course progress'

                  .py-1
                    =submit_tag 'Next Step', class: 'btn btn-primary', id: 'enroll_submit_button'
                    %p#enrollment_message.text-warning.hidden Visit your account page to edit this enrolment

            .form-group.form-group-expandable
              .custom-control.custom-radio
                %input#user-details-form.custom-control-input.style-radio{:name => "enrol-user-details-options", :type => "radio", :value => 'user-details'}
                %label.custom-control-label{:for => "user-details-form"}
                  %span.custom-label-info
                    %span.h5.m-0
                      %span Step 2 - Exam Body Details
                  %span.custom-check

              .form-details#exam_body_user_details_form
                =form_for(current_user, url: update_exam_body_user_details_url, html: {class: 'form py-2 user_modal_form', role: 'form', name: 'user_modal_form'}) do |f|
                  -if current_user.date_of_birth
                    %p="Confirm #{@exam_body.name} Student Number and Date of Birth"

                  .row
                    .col-sm-6
                      =f.fields_for :exam_body_user_details, @exam_body_user_details do |detail|
                        =detail.hidden_field :exam_body_id
                        .form-group
                          =detail.label :student_number, "#{detail.object.exam_body.name} Student Number"
                          .input-group.input-group-lg
                            =detail.text_field :student_number, class: 'form-control full-width'
                    .col-sm-6
                      .form-group
                        =f.label :date_of_birth, t('views.user_accounts.student_user_form.date_of_birth')
                        .form-row.align-items-center.justify-content-between
                          %span.custom-date-select.input-group.input-group-lg
                            =f.date_select :date_of_birth, {order: [:day, :month, :year], prompt: { day: 'Day', month: 'Month', year: 'Year' },
                             start_year: Date.today.year - 15, end_year: Date.today.year - 100}, class: 'form-control custom-select'


                  .pt-1
                    #submit
                      =submit_tag 'Complete Enrolment', class: 'btn btn-primary'



:javascript

  $( document ).ready(function() {
    $('#enroll_submit_button').attr('disabled', true);
    var sittingName = '';
    var dateOfBirth = '';
    $('#enroll_submit_button').on('click', function() {
      if($('#exam_sitting_select').find(":selected").val()) {
        sittingName = $('#exam_sitting_select').find(":selected").text();
      } else if($('#enrollment_exam_date_1i').find(":selected").val()) {
        sittingName = $('#enrollment_exam_date_2i').find(":selected").text() + ' ' + $('#enrollment_exam_date_3i').find(":selected").text() + ', ' + $('#enrollment_exam_date_1i').find(":selected").text();
      } else {
        console.log('No exam sitting');
      }
      sendClickEventToSegment('completed_enrol_step1', {userId: '#{@current_user&.id}', email: '#{@current_user&.email}', hasValidSubscription: '#{@current_user&.valid_subscription?}', isEmailVerified: '#{@current_user&.email_verified}', preferredExamBodyId: '#{@current_user&.preferred_exam_body_id}', isLoggedIn: '#{!@current_user&.nil?}', sessionId: '#{session&.id}', programName: '#{@course.group.name}', courseName: '#{@course.name}', sittingName: sittingName})
    });
    $('#submit').on('click', function() {
      if($('#user_date_of_birth_1i').find(":selected").val()) {
        dateOfBirth = $('#user_date_of_birth_3i').find(":selected").text() + '/' + $('#user_date_of_birth_2i').find(":selected").val() + '/' + $('#user_date_of_birth_1i').find(":selected").text();
      } else {
        console.log('No DOB');
      }
      sendClickEventToSegment('completed_enrol_step2', {userId: '#{@current_user&.id}', email: '#{@current_user&.email}', hasValidSubscription: '#{@current_user&.valid_subscription?}', isEmailVerified: '#{@current_user&.email_verified}', preferredExamBodyId: '#{@current_user&.preferred_exam_body_id}', isLoggedIn: '#{!@current_user&.nil?}', sessionId: '#{session&.id}', programName: '#{@course.group.name}', courseName: '#{@course.name}', sittingName: sittingName, dateOfBirth: dateOfBirth})
    });
  });

  $('.form-group-expandable').on('change', '.custom-control-input[type="radio"][name="enrol-user-details-options"]', function() {
    $(this).closest('.modal-forms').find('.custom-control-input[type="radio"]').closest('.custom-control').siblings('.form-details').slideUp();
    if ($(this).is(':checked')) {
      $(this).closest('.custom-control').siblings('.form-details').slideDown();
    }
  });
  $('.form-group-expandable .custom-control-input[type="radio"]:checked').closest('.custom-control').siblings('.form-details').show();

  $(document).on('submit','form.enrollment_modal_form',function(){
    $(this).closest('.form-group-expandable').siblings('.form-group-expandable').find('.custom-control-input[type="radio"]').click();
    $('#enroll_submit_button').hide();
    $('#enrollment_message').fadeIn(900);
  });

  $('input[type="checkbox"]').on('change', function() {
    if($('#notifications').prop('checked') == true) {
      $("#hidden_notifications").val('true');
    } else if($('#notifications').prop('checked') == false) {
      $("#hidden_notifications").val('false');
    }
  });


-if @course_log

  :javascript
    // Set the SCUL hidden id field to nil if checkbox is selected
    let scul_id = #{@course_log.id};
    $('input[type="checkbox"]').on('change', function() {
      if($('#use_new_scul').prop('checked') == true) {
        $("#scul_id").val('');
      } else if($('#use_new_scul').prop('checked') == false) {
        $("#scul_id").val(scul_id);
      }
    });


-if @course.computer_based && @computer_exam_sitting

  :javascript
    $('#custom_exam_date .custom-date-select').change(function () {
      if ($('#custom_exam_date .custom-date-select select:nth-child(1) option:selected').text() != 'Day' &&
       $('#custom_exam_date .custom-date-select select:nth-child(2) option:selected').text() != 'Month' &&
       $('#custom_exam_date .custom-date-select select:nth-child(3) option:selected').text() != 'Year') {
        $('#enroll_submit_button').attr('disabled', false);
      } else {
        $('#enroll_submit_button').attr('disabled', true);
      }
    });

-else
  :javascript
    $('#exam_sitting_select').change(function () {
      if ($('#exam_sitting_select option:selected').text() == 'Select...') {
        $('#enroll_submit_button').attr('disabled', true);
      } else {
        $('#enroll_submit_button').attr('disabled', false);
      }
    });


:javascript
  let sittings = "#{@exam_sittings.to_json}";

  $('#new_enrollment').submit(function() {
    var values = {};
    $.each($('#new_enrollment').serializeArray(), function(i, field) {
      values[field.name] = field.value;
    });
    let course = "#{@course.name}";
    // dataLayer.push({'event':'courseEnrol', 'course_name':course, 'exam_sitting':values["enrollment[exam_sitting_id]"], 'bootcamp_notifications':values["enrollment[notifications]"]});
  });
