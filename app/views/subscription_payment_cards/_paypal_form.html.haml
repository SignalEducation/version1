.payment-errors

  -if params[:coupon]
    .form-group.l-margin-bottom-big
      .col-xs-6{style: 'padding-left: 5px;'}
        %label
          %h4{style: 'padding-bottom: 0;'}
            =t('views.subscriptions.new_subscription.coupon_code')
      .col-xs-6.invalid-code{style: 'color: #EF5153;'}
        ='Invalid Code'
      %input{type: 'text_field', id: 'coupon_code', class: 'form-control', placeholder: 'Valid Coupon Code'}



  .form-group.l-margin-top
    .tot-get
      .price
        -default_plan = @subscription_plans.where(payment_frequency_in_months: 3).first
        %span.total Total:
        %span.value#total-value
          =default_plan.currency.format_number(default_plan.price)
      .price.discounted-price
        -default_plan = @subscription_plans.where(payment_frequency_in_months: 3).first
        %span.total Discounted Total:
        %span.value#discounted-value
          =default_plan.currency.format_number(default_plan.price)

    .form-submit
      = f.submit '', id: 'paypal_submit' do
        =image_tag("https://www.paypalobjects.com/webstatic/en_US/i/buttons/checkout-logo-large.png")

      .sk-circle.text-center
        .sk-circle1.sk-child
        .sk-circle2.sk-child
        .sk-circle3.sk-child
        .sk-circle4.sk-child
        .sk-circle5.sk-child
        .sk-circle6.sk-child
        .sk-circle7.sk-child
        .sk-circle8.sk-child
        .sk-circle9.sk-child
        .sk-circle10.sk-child
        .sk-circle11.sk-child
        .sk-circle12.sk-child


  .form-group.l-margin-top
    .obs
      -#
        -time_now = Proc.new{Time.now}.call
        -number_of_months = default_plan.payment_frequency_in_months
        ="Your next recurring payment will be on "
        #next-payment-date
          =humanize_datetime(time_now + number_of_months.months)

      %p
        <strong>NOTE</strong> - You are subscribing to a <strong>recurring payment</strong> which will continue until you cancel your subscription.


      %p
        =t('views.subscriptions.new_subscription.remember_cancel_anytime')


:javascript

  // Custom styling can be passed to options when creating an Element.
  var style = {
    base: {
      fontWeight: 300,
      fontFamily: 'Rubik',
      fontSize: '20px',
      lineHeight: '24px'
    }
  };

  var stripe = Stripe('#{ENV['LEARNSIGNAL_V3_STRIPE_PUBLIC_KEY']}');
  var elements = stripe.elements();

  var card = elements.create('card', {hidePostalCode: true, style: style});
  card.mount('#card-element');


  function stripeTokenHandler(token) {
    // Insert the token ID into the form so it gets submitted to the server
    var form = document.getElementById('upgrade-form');
    $('#subscription_stripe_token').val(token.id);
    $('#hidden_coupon_code').val($('#coupon_code').val());

    // Submit the form
    form.submit();
  }

  function createToken() {
    stripe.createToken(card).then(function(result) {
      if (result.error) {
        // Inform the user if there was an error
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = result.error.message;
        //Replace spinning JS with Submit button
        $('#card_submit').prop('disabled',false);
        $('#card_submit').show();
        $(".sk-circle").hide();

      } else {
        // Send the token to your server
        stripeTokenHandler(result.token);
      }
    });
  };

  // Create a token when the form is submitted.
  var form = document.getElementById('upgrade-form');
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    //Replace submit button with spinning JS
    $('#card_submit').prop('disabled',true);
    $('#card_submit').hide();
    $(".sk-circle").show();
    createToken();
  });



  card.addEventListener('change', function(event) {
    var displayError = document.getElementById('card-errors');
    if (event.error) {
      displayError.textContent = event.error.message;
    } else {
      displayError.textContent = '';
    }
  });



