.col-md-12
  -if @course_module_element.try(:course_module_element_quiz).try(:enough_questions?) || current_user.try(:admin?)|| current_user.try(:content_manager?)

    %h2
      =@course_module_element.try(:name).try(:html_safe)
    .box-item.question-box.border-same-backcolor#quiz-contents{style: 'min-height: 745px;'}
      .quiz-heading.l-margin-bottom
        #question-count.p
          Question 1 of 4
      .progress.l-margin-bottom-huge
        .progress-bar{role: 'progressbar', aria: {valuenow: 0, valuemin: 0, valuemax: 100}, style: 'width: 0%;'}


      -@quiz_questions.each do |question|
        =render partial: 'quiz_questions/show', locals: {question: question, hide_me: true}

      =form_for @course_module_element_user_log, url: courses_url, html: {style: 'display: none;'} do |f|
        =f.text_field :user_id
        =f.text_field :course_module_id
        =f.text_field :course_module_element_id
        =f.text_field :time_taken_in_seconds, value: @course_module_element.try(:estimated_time_in_seconds)
        =f.fields_for :quiz_attempts do |attempt|
          =attempt.text_field :user_id
          =attempt.text_field :quiz_question_id
          =attempt.text_field :quiz_answer_id
          =attempt.text_field :answer_array

  -else
    .row
      .col-sm-12
        .well.well-lg
          Sorry, there are not enough questions to present this quiz

  :javascript

    var allQuestionsList = #{@all_ids},
        selectionStrategy = '#{@strategy}',
        numberOfQuestions = #{@number_of_questions},
        currentQuestion = 1,
        progressBar = $('.progress-bar'),
        questionCount = $('.quiz-heading');

    function updateProgressBar() {
      var percentage = (currentQuestion / numberOfQuestions * 100);
      progressBar.attr('aria-valuemax', numberOfQuestions);
      progressBar.attr('aria-valuenow', currentQuestion);
      progressBar.attr('style', 'width: ' + percentage + '%;');
      progressBar.find('span').text(currentQuestion + ' of ' + numberOfQuestions);
      questionCount.find('#question-count').text('Question ' + currentQuestion + ' of ' + numberOfQuestions);
    }

    function askQuestion(questionNumber) {
      updateProgressBar();
      $('.question').hide();
      $('#question_' + allQuestionsList[questionNumber - 1]).fadeIn();
    }

    //Triggered by onclick event in page
    function logAnswer(questionId, answerId, answerArray) {
      // log the answer in the form fields_for
      $('#course_module_element_user_log_quiz_attempts_attributes_' + (currentQuestion - 1) + '_quiz_question_id').val(questionId);
      $('#course_module_element_user_log_quiz_attempts_attributes_' + (currentQuestion - 1) + '_quiz_answer_id').val(answerId);
      $('#course_module_element_user_log_quiz_attempts_attributes_' + (currentQuestion - 1) + '_answer_array').val(answerArray);


      if (currentQuestion < numberOfQuestions) {
        allQuestionsList
        currentQuestion++;
        updateProgressBar();
        askQuestion(currentQuestion);
      } else {
        $('#new_course_module_element_user_log').submit();
      }
    }

    $(document).on('ready page:load', function() {
      askQuestion(1); // 1 is the first question
    });
