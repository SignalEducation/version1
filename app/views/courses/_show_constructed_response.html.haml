.col-md-12

  .scenario-box-nav.scenario-box-nav-header
    .cr-resources
      =@course_module_element.try(:name)

    .cr-navigation
      %ul.cr-nav-block
        %li.cr-nav-link
          -# Add to a Start-screen with list of any previous attempts
          ='Start'

        &#124;
        %li.cr-nav-link{onclick: 'submitForm(); return false;'}
          -# Add to an End-screen  with list of question status and flagged_for_review
          ='Submit'

        &#124;
        %li.cr-nav-link.review-flag
          ='Flag for review'

        &#124;
        %li
          =link_to library_special_link(@course_module.parent), class: 'cr-nav-link' do
            -# Add 'Confirm' Modal
            ='Exit'

  .scenario-box
    =form_for @course_module_element_user_log, url: update_constructed_response_user_log_courses_url, remote: true do |f|
      =f.hidden_field :id
      =f.hidden_field :subject_course_user_log_id, value: @subject_course_user_log.try(:id)
      =f.hidden_field :student_exam_track_id, value: @student_exam_track.try(:id)
      =f.hidden_field :user_id
      =f.hidden_field :course_module_id
      =f.hidden_field :course_module_element_id
      =f.hidden_field :time_taken_in_seconds, value: @course_module_element.try(:estimated_time_in_seconds)
      =f.fields_for :constructed_response_attempt do |constructed_response_attempt|
        =constructed_response_attempt.hidden_field :user_id
        =constructed_response_attempt.hidden_field :constructed_response_id
        =constructed_response_attempt.hidden_field :scenario_id
        =constructed_response_attempt.hidden_field :course_module_element_id
        =constructed_response_attempt.hidden_field :original_scenario_text_content
        =constructed_response_attempt.hidden_field :user_edited_scenario_text_content
        -cr_attempt = constructed_response_attempt.object

        #splitter
          .pane-content
            .scenario-content
              =cr_attempt.user_edited_scenario_text_content.try(:html_safe)

          .pane-content
            =constructed_response_attempt.fields_for :scenario_question_attempts do |scenario_question_attempt|
              =scenario_question_attempt.hidden_field :constructed_response_attempt_id
              =scenario_question_attempt.hidden_field :course_module_element_user_log_id
              =scenario_question_attempt.hidden_field :user_id
              =scenario_question_attempt.hidden_field :constructed_response_id
              =scenario_question_attempt.hidden_field :scenario_question_id
              =scenario_question_attempt.hidden_field :status
              =scenario_question_attempt.hidden_field :flagged_for_review
              =scenario_question_attempt.hidden_field :original_scenario_question_text
              =scenario_question_attempt.hidden_field :user_edited_scenario_question_text
              -sq_attempt = scenario_question_attempt.object

              .cr-question{id: "scenario_question_attempt_#{sq_attempt.id}"}


                =sq_attempt.user_edited_scenario_question_text.try(:html_safe)

                =scenario_question_attempt.fields_for :scenario_answer_attempts do |scenario_answer_attempt|
                  -sa_attempt = scenario_answer_attempt.object
                  =scenario_answer_attempt.hidden_field :scenario_question_attempt_id
                  =scenario_answer_attempt.hidden_field :constructed_response_attempt_id
                  =scenario_answer_attempt.hidden_field :course_module_element_user_log_id
                  =scenario_answer_attempt.hidden_field :user_id
                  =scenario_answer_attempt.hidden_field :scenario_question_id
                  =scenario_answer_attempt.hidden_field :constructed_response_id
                  =scenario_answer_attempt.hidden_field :scenario_answer_template_id
                  =scenario_answer_attempt.hidden_field :original_answer_template_text

                  -if sa_attempt.spreadsheet_editor?
                    =scenario_answer_attempt.hidden_field :user_edited_answer_template_text




                  -if sa_attempt.spreadsheet_editor?
                    =render partial: 'courses/spread_sheet_template', locals: {sq_attempt: sq_attempt, sa_attempt: sa_attempt, scenario_answer_attempt: scenario_answer_attempt, spreadsheet_json: sa_attempt.user_edited_answer_template_text}
                  -elsif sa_attempt.text_editor?
                    =render partial: 'courses/text_editor_template', locals: {scenario_answer_attempt: scenario_answer_attempt, sq_attempt: sq_attempt, sa_attempt: sa_attempt}


    .scenario-box-nav.scenario-box-nav-footer
      .cr-resources
        -# TODO
        ='Resources Will Go Here!'

      .cr-navigation
        %ul.cr-nav-block
          %li.cr-nav-link{onclick: 'previousQuestion(); return false;'}
            .glyphicon.glyphicon-arrow-left
            ='Previous'
          &#124;
          %li.cr-nav-link#open-navigation-dialog{onclick: 'openDialog(); return false;'}
            .glyphicon.glyphicon-screenshot
            ='Navigation'
          %li.cr-nav-link.hidden#close-navigation-dialog{onclick: 'closeDialog(); return false;'}
            .glyphicon.glyphicon-screenshot
            ='Navigation'
          &#124;
          %li.cr-nav-link{onclick: 'nextQuestion(); return false;'}
            ='Next'
            .glyphicon.glyphicon-arrow-right


  #navigation-dialog.nav-dialog
    -counter = 0
    -@all_scenario_question_attempt_ids.each do |scenario_question_attempt_id|
      -counter = counter + 1
      %ul
        %li{onclick: "revealQuestion(#{scenario_question_attempt_id}); return false;"}
          ='Question '
          =counter



:javascript


  $(document).ready(function() {

    $("#splitter").kendoSplitter({
      panes: [
        { scrollable: true },
        { scrollable: true, size: "60%" }
        ]

    });

    var outerBox = $("#splitter").parent().parent().parent();
    var outerSplitter = $("#splitter").data("kendoSplitter");
    var browserWindow = $(window);
    var headerFooterHeight = $(".nav-header").height() + ($("#footer").height() - '30');

    function resizeSplitter() {
        outerBox.height(browserWindow.height() - headerFooterHeight);
        outerSplitter.wrapper.height(browserWindow.height() - headerFooterHeight);
        outerSplitter.resize();
    }

    resizeSplitter();
    browserWindow.resize(resizeSplitter);

  });

  // Navigation Dialog & Buttons
  $("#navigation-dialog").kendoDialog({
    width: "400px",
    title: "Navigation",
    closable: true,
    modal: false,
    visible: false,
    close: onClose
  });

  var dialog = $("#navigation-dialog").data("kendoDialog");


  var questionsList = #{@all_scenario_question_attempt_ids},
      currentQuestion = 1;



  function openDialog() {
    dialog.open();
    $("#open-navigation-dialog").addClass('hidden');
    $("#close-navigation-dialog").removeClass('hidden');
  };

  function closeDialog() {
    dialog.close();
    $("#open-navigation-dialog").removeClass('hidden');
    $("#close-navigation-dialog").addClass('hidden');
  };

  function onClose() {
    $("#open-navigation-dialog").removeClass('hidden');
    $("#close-navigation-dialog").addClass('hidden');
  }

  function updateHiddenField(sq_attempt_id, sa_attempt_id) {

    var data = $("#scenario_question_attempt_" + sq_attempt_id + "_scenario_answer_attempt_" + sa_attempt_id + "_spreadsheet").data("kendoSpreadsheet");
    var data2 = data.toJSON();
    var json = JSON.stringify(data2, null, 2);

    var ssa = $("#input_scenario_question_attempt_" + sq_attempt_id + "_scenario_answer_attempt_" + sa_attempt_id + "_spreadsheet_json");
    ssa.val(json);
  }


  function nextQuestion() {
    $('.cr-question').hide();
    if(currentQuestion < (questionsList.length -1 )) {
      currentQuestion++;
    }
    $('#scenario_question_attempt_' + questionsList[currentQuestion]).fadeIn();

    $('.answer_spreadsheet').each(function (index, value){
      updateHiddenField($(this).attr('sq_attempt_id'), $(this).attr('sa_attempt_id'))
    });


    closeDialog();
    submitForm();
  };

  function previousQuestion() {
    $('.cr-question').hide();
    if(currentQuestion != 0) {
      currentQuestion--;
    }
    $('#scenario_question_attempt_' + questionsList[currentQuestion]).fadeIn();
    closeDialog();
    submitForm();
  };

  function revealQuestion(questionNumber) {
    $('.cr-question').hide();
    currentQuestion = questionsList.indexOf(questionNumber);
    $('#scenario_question_attempt_' + questionsList[currentQuestion]).fadeIn();
    closeDialog();
    submitForm();
  };



  $(document).on('ready page:load', function() {
    questionNumber = questionsList[0];
    revealQuestion(questionNumber);
  });





  function submitForm() {


    //TODO Find all texteditors and call the updateHiddenField function on each

    $("#edit_course_module_element_user_log_#{@course_module_element_user_log.id}").submit();
  };

