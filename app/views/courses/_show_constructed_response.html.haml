.col-md-12

  .scenario-box-nav.scenario-box-nav-header
    =@course_module_element.try(:name)

    =link_to library_special_link(@course_module.parent) do
      .cr-nav-link.pull-right
        -# Add 'Confirm' Modal
        ='Exit'


  .scenario-box
    #splitter
      .pane-content
        .scenario-content
          =@constructed_response.scenario.text_content.try(:html_safe)

      .pane-content
        -@constructed_response.scenario.scenario_questions.each_with_index do |scenario_question, index|
          .cr-question{id: "cr_question_#{scenario_question.id}"}

            =scenario_question.text_content.try(:html_safe)

            -scenario_question.scenario_answer_templates.each do |scenario_answer_template|
              -if scenario_answer_template.spreadsheet_editor?
                =render partial: 'courses/spread_sheet_template', locals: {scenario_question: scenario_question, scenario_answer_template: scenario_answer_template, spreadsheet_json: scenario_answer_template.text_content}
              -elsif scenario_answer_template.text_editor?
                =render partial: 'courses/text_editor_template', locals: {scenario_question: scenario_question, scenario_answer_template: scenario_answer_template}


  .scenario-box-nav.scenario-box-nav-footer
    .cr-resources
      -# TODO
      ='Resources Will Go Here!'

    .cr-navigation
      %ul.cr-nav-block
        %li.cr-nav-link{onclick: 'previousQuestion(); return false;'}
          .glyphicon.glyphicon-arrow-left
          ='Previous'
        &#124;
        %li.cr-nav-link#open-navigation-dialog{onclick: 'openDialog(); return false;'}
          .glyphicon.glyphicon-screenshot
          ='Navigation'
        %li.cr-nav-link.hidden#close-navigation-dialog{onclick: 'closeDialog(); return false;'}
          .glyphicon.glyphicon-screenshot
          ='Navigation'
        &#124;
        %li.cr-nav-link{onclick: 'nextQuestion(); return false;'}
          ='Next'
          .glyphicon.glyphicon-arrow-right

  #navigation-dialog.nav-dialog
    -@constructed_response.scenario.scenario_questions.each do |scenario_question|
      %ul
        %li{onclick: "revealQuestion(#{scenario_question.id}); return false;"}
          ='Question '
          =scenario_question.sorting_order





:javascript


  $(document).ready(function() {

    $("#splitter").kendoSplitter({
      panes: [
        { scrollable: true },
        { scrollable: true, size: "60%" }
        ]

    });

    var outerBox = $("#splitter").parent();
    var outerSplitter = $("#splitter").data("kendoSplitter");
    var browserWindow = $(window);
    var headerFooterHeight = $(".nav-header").height() + ($("#footer").height() - '30');

    function resizeSplitter() {
        outerBox.height(browserWindow.height() - headerFooterHeight);
        outerSplitter.wrapper.height(browserWindow.height() - headerFooterHeight);
        outerSplitter.resize();
    }

    resizeSplitter();
    browserWindow.resize(resizeSplitter);

  });

  // Navigation Dialog & Buttons
  $("#navigation-dialog").kendoDialog({
    width: "400px",
    title: "Navigation",
    closable: true,
    modal: false,
    visible: false,
    close: onClose
  });

  var dialog = $("#navigation-dialog").data("kendoDialog");


  var questionsList = #{@all_question_ids},
      currentQuestion = 1;



  function openDialog() {
    dialog.open();
    $("#open-navigation-dialog").addClass('hidden');
    $("#close-navigation-dialog").removeClass('hidden');
  };

  function closeDialog() {
    dialog.close();
    $("#open-navigation-dialog").removeClass('hidden');
    $("#close-navigation-dialog").addClass('hidden');
  };

  function onClose() {
    $("#open-navigation-dialog").removeClass('hidden');
    $("#close-navigation-dialog").addClass('hidden');
  }

  function nextQuestion() {
    $('.cr-question').hide();
    if(currentQuestion < (questionsList.length -1 )) {
      currentQuestion++;
    }
    $('#cr_question_' + questionsList[currentQuestion]).fadeIn();
    closeDialog();
  };

  function previousQuestion() {
    $('.cr-question').hide();
    if(currentQuestion != 0) {
      currentQuestion--;
    }
    $('#cr_question_' + questionsList[currentQuestion]).fadeIn();
    closeDialog();
  };

  function revealQuestion(questionNumber) {
    $('.cr-question').hide();
    currentQuestion = questionsList.indexOf(questionNumber);
    $('#cr_question_' + questionsList[currentQuestion]).fadeIn();
    closeDialog();
  };


  $(document).on('ready page:load', function() {
    questionNumber = questionsList[0];
    revealQuestion(questionNumber);
  });

