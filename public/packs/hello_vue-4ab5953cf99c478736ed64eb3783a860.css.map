{"version":3,"file":"hello_vue-4ab5953cf99c478736ed64eb3783a860.css","sources":["webpack:///./app/javascript/app/javascript/app.vue","webpack:///./app/javascript/components/app/javascript/components/Subjects.vue","webpack:///./app/javascript/components/CBEDetails.vue","webpack:///./app/javascript/app/javascript/Show.vue"],"sourcesContent":["<template>\n    <div class=\"panel-body no-top-padding\">\n      <split-pane  :min-percent='50' :default-percent='50' split=\"vertical\">\n        <p>View CBEs</p>\n        <template slot=\"paneL\">\n            <div v-if=\"showSubjects = true\">\n                <Subjects ref=\"subjects\"></Subjects>\n            </div>\n\n            <div class=\"form-group row\">\n                <div class=\"col-md-10\">\n                  <button v-on:click=\"createNewCBE\" class='btn btn-secondary'>Create a new CBE</button>\n                </div>\n            </div>\n\n            <div v-if=\"cbeSectionButton === true\">\n              <button v-on:click=\"makeCBESectionVisible\" class='btn btn-secondary'>Add Section</button>\n            </div>\n\n            <div v-show=\"this.$store.state.showQuestions\">\n                <button v-on:click=\"makeQuestionSelectionVisible\" class='btn btn-secondary'>Add Question</button>\n            </div>\n\n\n            <div v-show=\"showQuestionSelection\">\n              <QuestionsList> </QuestionsList>\n            </div>\n\n        </template>\n        <template slot=\"paneR\">\n          <div v-show=\"showCBEDetails\">\n            <CBEDetails> </CBEDetails>\n            <button v-on:click=\"saveNewCBE\" class='btn btn-primary'>Save</button>\n          </div>\n\n            <div v-show=\"this.$store.state.showSections\" class='btn btn-primary'>\n            <CBESection> </CBESection>\n            \n          </div>\n\n        <div v-show=\"this.$store.state.multipleChoiceSelected\">\n              <CBEMultipleChoiceQuestion> </CBEMultipleChoiceQuestion>\n        </div>\n\n            <div v-if=\"selectedSubjectId !== null\">\n              <span class=\"badge badge-pill badge-primary\">CBE ID {{createdCBE.cbeId}}</span>\n              <span class=\"badge badge-pill badge-primary\">CBE Name {{createdCBE.cbeName}}</span>\n            </div>\n\n        </template>\n      </split-pane>\n    </div>\n</template>\n\n\n<script>\n    import axios from 'axios'\n    import Admin from './components/Admin'\n    import Exam from './components/Exam'\n    import Subjects from './components/Subjects'\n    import CBESettings from './components/CBESettings'\n    import CBEDetails from './components/CBEDetails'\n    import CBESection from './components/CBESection'\n    import CBEMultipleChoiceQuestion from './components/CBEMultipleChoiceQuestion'\n    import QuestionsList from './components/QuestionsList'\n    import splitPane from 'vue-splitpane'\n\n\n    export default {\n        components: {\n           Admin,\n           CBESettings,\n           CBEDetails,\n           CBESection,\n           Exam,\n           Subjects,\n           CBEMultipleChoiceQuestion,\n           QuestionsList,\n        },\n\n        data: function () {\n            return {\n                createdCBE: [],\n                selectedSubjectId: null,\n                message: 'Test',\n                cbeQuestionValid: false,\n                cbeDetails: [],\n                testName: [],\n                options: [],\n                showCBESection: false,\n                showCBEDetails: false,\n                showSubjects: true,\n                cbeSectionButton: false,\n                sectionDetails: {},\n                sectionName: null,\n                sectionLabel: null,\n                sectionDescription: null,\n                createdSection: null,\n                showQuestionDetails: false,\n                showQuestionSelection: false,\n            }\n        },\n        computed: {\n            currentCBEId (){\n              return this.$store.state.currentCBEId\n            },\n             multipleChoiceSelected (){\n                return true\n            },\n        },\n        methods: {\n            makeCBESectionVisible: function(page, index) {\n              this.$store.state.showSections = true\n              this.showCBEDetails = false\n\n            },\n            makeQuestionSelectionVisible: function(page, index) {\n              this.showQuestionSelection = true\n            },\n            createNewCBE: function (page, index) {\n                this.selectedSubjectId = this.$refs.subjects.selectedSubject\n                this.$store.state.currentSubjectId = this.selectedSubjectId\n                this.showCBEDetails = true\n            },\n\n            saveNewCBE: function (page, index) {\n\n                this.cbeDetails = {}\n\n                this.selectedSubjectId = this.$refs.subjects.selectedSubject\n                this.selectedSubjectId = this.$refs.subjects.selectedSubject\n\n                this.cbeDetails['name'] = this.$store.state.cbeName \n                this.cbeDetails['description'] =this.$store.state.cbeDescription \n                this.cbeDetails['time'] = this.$store.state.cbeTimeLimit \n                this.cbeDetails['number_of_pauses'] =this.$store.state.cbeNumberOfPauses \n                this.cbeDetails['length_of_pauses'] = this.$store.state.cbeLengthOfPauses \n                this.cbeDetails['subject_course_id'] = this.selectedSubjectId \n                this.cbeDetails['title'] = this.$store.state.cbeTitle\n\n                this.$store.state.currentSubjectId = this.selectedSubjectId\n                this.showSubjects = false\n                    \n                axios.post('http://localhost:3000/api/cbes/', {cbe: this.cbeDetails})\n                    .then(response => {\n                        console.log(response.status)\n                        this.createdCBE = response.data\n                        this.$store.commit('setCurrentCbeId', this.createdCBE.cbeId)\n                        if(this.createdCBE.cbeId > 0){\n                          this.cbeSectionButton = true\n                        }\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n            },\n\n             saveSection: function (page, index) {\n                this.sectionDetails['sectionName'] = this.sectionName\n                this.sectionDetails['sectionLabel'] = this.sectionLabel\n                this.sectionDetails['sectionDescription'] = this.sectionDescription\n                this.sectionDetails['cbe_id'] = this.$store.state.currentCbeId\n\n                axios.post('http://localhost:3000/api/cbes/' + this.$store.state.currentCbeId + 'create_section', {cbe_section: this.sectionDetails})\n                    .then(response => {\n                        this.createdSection = response.data\n       \n                        this.$store.commit('setCurrentSectionId', this.createdSection.cbeSectionId)\n                        if (this.$store.state.currentSectionId > 0 ) {\n                            this.showQuestions = true\n                            this.showCBESection = false\n                        }\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n        },\n\n        },\n\n    }\n</script>\n\n\n\n<style scoped>\n    p {\n        font-size: 2em;\n        text-align: center;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/app/javascript/app.vue","<template>\n    <div class=\"row\">\n        <div class=\"col-sm-10\">\n            <div class=\"form-group\">\n                <label for=\"colFormLabelSm\">Subject</label>\n                <div class=\"input-group input-group-lg\">\n                    <select  v-model=\"selectedSubject\" class=\"form-control custom-select\">\n                        <option class=\"col-md-8\" v-for=\"option in options\" v-bind:value=\"option.id\">\n                            {{option.name}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n\n    export default {\n        mounted(){\n            this.showSubjects()\n            this.fetchQuestionTypes()\n            this.fetchQuestionStatuses()\n            // TODO this.fetchSectionTypes()\n        },\n        data: function () {\n            return {\n                selectedSubject: null,\n                options: []\n            }\n        },\n        methods: {\n            showSubjects: function (page, index) {\n                axios.get('http://localhost:3000/api/subjects/')\n                    .then(response => {\n                        this.options = response.data\n                    })\n                    .catch(e => {\n                        console.log('Error')\n                    })\n\n            },\n            fetchQuestionTypes: function (page, index) {\n                axios.get('http://localhost:3000/api/cbe_question_types/')\n                    .then(response => {\n                        this.$store.questionTypes = response.data\n                        return response.data\n                    })\n                    .catch(e => {\n                        console.log('Error' + e)\n                    })\n\n            },\n            fetchQuestionStatuses: function (page, index) {\n                axios.get('http://localhost:3000/api/cbe_question_statuses/')\n                    .then(response => {\n                        this.$store.questionStatuses = response.datax\n                    })\n                    .catch(e => {\n                        console.log('Error' + e)\n                    })\n\n            },\n            fetchSectionTypes: function (page, index) {\n                axios.get('http://localhost:3000/api/v1/cbe_section_types/')\n                    .then(response => {\n                        this.$store.SectionTypes = response.data\n\n                    })\n                    .catch(e => {\n                        console.log('Error' + e)\n                    })\n\n            }\n           \n        }\n    }\n</script>\n\n\n<style scoped>\n    p {\n        font-size: 2em;\n        text-align: center;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/components/app/javascript/components/Subjects.vue","input, output, textarea, select, button {\n  clear: both;\n  float: right;\n  width: 70%; }\n\nlabel {\n  float: left;\n  width: 30%;\n  text-align: right;\n  padding: 0.25em 1em 0 0; }\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/components/CBEDetails.vue","<template>\n\n<div>\n        <h1>CBE settings</h1>\n        <label for=\"cbe-name\">CBE</label>\n        <div class=\"field\">\n          <span class=\"field-value\" v-show=\"!showField('name')\" @click=\"focusField('name')\">{{cbe.name}}</span>\n          <input v-model=\"cbe.name\" v-show=\"showField('name')\" id=\"cbe-name\" type=\"text\" class=\"field-value form-control\" @focus=\"focusField('name')\" @blur=\"blurField\">\n        </div>\n        \n        <label for=\"cbe-id\">CBE Section</label>\n        <div class=\"field\">\n          <span class=\"field-value\" v-show=\"!showField('id')\" @click=\"focusField('id')\">{{cbe.id}}</span>\n          <input v-model=\"cbe.id\" v-show=\"showField('id')\" type=\"id\" class=\"field-value form-control\" @focus=\"focusField('id')\" @blur=\"blurField\">\n   \n\n        <span>\n        </span>\n       <div class=\"row\">\n         <div class=\"col-sm-10\">\n          <div class=\"form-group\">\n            <select  v-model=\"selectedCbe\" class=\"form-control custom-select\">\n               <option class=\"col-md-8\" v-for=\"option in options\" v-bind:value=\"option.id\">\n                  {{option.name}}\n               </option>\n            </select>\n            </div>\n          </div>\n        </div>\n      </div>\n</div>\n</template>\n\n<script>\n    import splitPane from 'vue-splitpane'\n    import axios from 'axios'\n\n    export default {\n        mounted(){\n            this.fetchCbes()\n        },\n        data(){\n          return {\n            cbe : {\n                    name: 'CBE 1',\n                    id: '1',\n                  },\n            editField : '',\n            options : [],\n            selectedCbe : ''\n          }\n        },\n        methods : {\n                focusField(name){\n                  this.editField = name;\n                },\n                blurField(){\n                  this.editField = '';\n                },\n                showField(name){\n                  return (this.cbe[name] == '' || this.editField == name)\n                },\n                fetchCbes: function (page, index) {\n                axios.get('http://localhost:3000/api/cbes/')\n                    .then(response => {\n                        // this.$store.questionTypes = response.data\n                        this.options = response.data\n                    })\n                    .catch(e => {\n                        console.log('Error' + e)\n                    })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    p {\n        font-size: 2em;\n        text-align: center;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/app/javascript/Show.vue"],"mappings":";AA0LA;AACA;AACA;AACA;;AC1GA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoEA;AACA;AACA;AACA;","sourceRoot":""}